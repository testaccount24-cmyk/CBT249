//ASMWMOD JOB (A006,SYCI,0002,0099,001),BARKOW,CLASS=J,MSGLEVEL=1,
// USER=EILEEN,MSGCLASS=A,PASSWORD=IIIIII
/*ROUTE PRINT CSCVM.EXBCSC
/*NOTIFY  CSCVM.EXBCSC
/*JOBPARM SYSAFF=MVSW
//STP1  EXEC DFH5ASM5,COPYLIB='EILEEN.MACLIB',SYSPARM=53
//*TP1  EXEC DFH4ASM4,COPYLIB='EILEEN.MACLIB',SYSPARM=41
//*ASM XOPTS(CICS  SP     NOPROLOG   SPIE NOEPILOG)   FOR V4
//**V2 TRANSLATOR MAY PUT OUT COND CODE 12-IGNORE IT
//*TP1  EXEC DFH2ASMC,COPYLIB='EILEEN.MACLIB',SYSPARM=21
//TRN.SYSIN   DD  *
*ASM XOPTS(CICS         NOPROLOG   SPIE NOEPILOG)
         AMODE 24
         RMODE 24
BASE     EQU   11                                                       COP00220
LINKREG   EQU  8
LINKREG2  EQU  7
RET      EQU  10
RET2     EQU  9
TCTTEAR  EQU   9                                                        COP00230
TIOABAR  EQU   7                                                        COP00240
TCSYSBAR EQU   1
EIBREG    EQU  2
DATAREG   EQU  6
PRVREG   EQU   5    PRVMOD LIST
CVTREG    EQU  1
LPDEREG   EQU  2
DCBREG    EQU  2
LENREG     EQU  3
DEBREG    EQU  3
LLTREG    EQU  3
TIOTREG   EQU  4
ARLREG    EQU  4
SITREG    EQU  4
INREG     EQU  4
CSAREG    EQU  13
JSCBREG   EQU  15
JFCBREG   EQU  15
DCTCBAR   EQU  15
TCBREG    EQU  5
OPFLREG   EQU  5
         PRINT OFF,NOGEN
        DCBD  DSORG=PO
DCBLEN  EQU  *-IHADCB
         PRINT OFF,NOGEN
ARL    IHAARL  DSECT=YES,PREFIX=ARL,DESCR=YES
ARLENGTH EQU  *-ARL
TIOT     DSECT
        IEFTIOT1
TIOTOFF   EQU  TIOENTRY-TIOT
XIOT      DSECT
     ORG XIOT+TIOELNGH-TIOENTRY
XIOELNGH  DS   XL(L'TIOELNGH)
     ORG  XIOT+TIOEDDNM-TIOENTRY
XIOEDDNM  DS  CL(L'TIOEDDNM)
     ORG  XIOT+TIOEJFCB-TIOENTRY
XIOEJFCB  DS   XL(L'TIOEJFCB)
JFCB     DSECT
         IEFJFCBN LIST=YES
DEBBASIC  IGGDEBD
          IKJTCB  LIST=YES,DSECT=YES
          IEZJSCB
ARAD    DSECT
ARALEN   DS   H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4
***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)
         DS   XL2  RESERVED
ARAJFCB  DS    CL176   JFCB
ARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL
        CVT   DSECT=YES,LIST=YES
          IHALPDE
LPDELEN    EQU   *-LPDE
LLTE      DSECT
          DS   X
LLTDSN    DS  CL44
LLTLEN    EQU  *-LLTE
LLTOFF    EQU  8    OFFSET TO FIRST LLTE
         EJECT
         PRINT ON,GEN
         IGWSMDE
         EJECT
* DYNAMIC OPEN/CLOSE REQUEST FORMAT
* DYNAMIC ALLOCATION DSECTS
         IEFZB4D0
         IEFZB4D2
RBLEN  EQU  (S99RBEND-S99RB)
         EJECT
          COPY DFHDCTDS
         PRINT ON,GEN
         COPY  DFHCSADS                                                 COP00070
         DFHAFCD TYPE=DSECT
         DFHTCA  CICSYST=YES      SYSTEM T C A   AND USER EB MOD
         COPY  DFHTCTTE                                                 COP00100
         DFHSIT TYPE=DSECT
PRVLIST   DSECT  PRVMOD LIST ..SITPRVMA
PRVLEN    DS   F
PRVNUM    DS   F
PRVENTRY  DS   CL8    FOR EACH ENTRY
         COPY  DFHTIOA                                                  COP00110
BUFFER   DS   80F
         ORG   TIOADBA                                                  COP00130
INITINP  DS    0F                                                       COP00140
TRANSID  DS    CL4                                                      COP00150
BLNK     DS    C                                                        COP00160
PROGRAM  DS    CL8                                                      COP00170
          DFHEISTG
SAVELINK DS   18F
SAVEREG2 DS   18F
SAVEMAC  DS   18F
MVSSAVE  DS   18F
RTNSAVE  DS   18F
SAVER13  DS    F
TCAADDR  DS    F
CSAADDR  DS    F
TCTADDR  DS    F
TIOADDR  DS    F
EIBADDR  DS    F
DATAADDR DS    F
RPLADDR  DS    F
TCBADDR   DS   F
TIOTADDR  DS   F
DEBADDR   DS   F
DCBADDR   DS   F
RETADDR    DS   F
RECADDR    DS   F
LASTSBA    DS  F
CURVLST    DS  F
CURPLST    DS  F
CURNUM     DS  H
LPADSNSA   DS  F
LPADSNTL  EQU 45  LENGTH OF EACH ENTRY
LPADSNAL    EQU LPADSNTL*40       40 ENTRIES 45 BYTES LONG
LASTIN    DS   F
LASTLPA   DS   F
LASTCONA  DS   F
NEXTCONA  DS   F
ENDOFLPA  DS   F
ENDORECA  DS   F
LASTBLOC  DS   F
ENDBLOCK DS   F
READAREA DS   F
MSL      DS    H
LEN      DS    H
LRECL    DS    H
BLKSIZE  DS    H
WORKPROG  DS   CL8
WORKDSN   DS   CL44
VTAMDSN   DS   CL44
LPADSN   DS   CL44
WORKDDN   DS   CL8
WORKQUE   DS   CL4
WORKDQE   DS   CL8
SYSNAME    DS   CL4
LPACONST   DS   CL20
SYSPARM    DS   CL2
SYSCLONE   DS   CL2
WORKADDR   DS   F
DFHADDR    DS   F
WORKCDDR   DS   CL8
WORKALIS   DS   CL8
ERRSW     DS   X
RELSW     DS   X
WORKSW    DS   X
NOLPA     EQU  X'01'
NOPPT     EQU  X'02'
FOUND     EQU  X'04'
LOADSVC   EQU  X'08'
LOADLPA   EQU  X'10'
LOADSTEP  EQU  X'20'
LOADLINK  EQU  X'40'
LOADRPL   EQU  X'80'
WORKSW2   DS    X
LOADVLST  EQU  X'01'
LOADVLIB  EQU  X'02'
LOADPROC  EQU  X'04'
LOADLPAN  EQU  X'10'
**********************
WORKSW3  DS  X
READSPRM EQU  X'01'
READZPRM EQU  X'02'
DIDLCONS EQU  X'04'
DIDSNAME EQU  X'08'
*****************
**********************
OUTLINE  DS    0C
OUTPROG   DS   CL8
OUTPUNC   DS  CL2
OUTCON   DS   0C
***       DC  X'11C2601DC0'  ROW3 COL1
         SBA  3,1
          ORG  OUTCON+1
OUTSBA   DS  XL2
          ORG
PROGCON  DS  CL8
LOADCON  DC C' IS IN DDN   '
DDNCON   DS  CL8
         DS   C
DSNCON   DS  CL42
         ORG DSNCON
DSNCONAT  DS  CL4
DSNCDDR   DS  CL8
DSNCONAL  DS  CL11
DSNALIS   DS  CL8
DSNCONAP  DS  C
          ORG
ATCONL    EQU  *-DSNCONAT
LPACON    DC C' NOT LOADED FROM LPA'
OUTCONL   EQU  *-OUTCON
WARLAREA  DS  CL(ARLENGTH)
WXJFCB   DS    0F                                                       JFC00600
         DC   X'13'           FOR LAST ENTRY                            JFC00610
WXADD    DC   AL3(WARLAREA)                                             JFC00620
WDCB     DS CL(DCBLEN)                                                       JFC
WDJLIST  RDJFCB  (2),MF=L
         ORG   *-3
WDJDCBA  EQU  *   ADDR OF DCB
         DS   AL3   PUT DCB ADDR HERE
         ORG
VDNTEXT  DS  CL18
VSNTEXT  DS  CL18
VSPTEXT  DS  CL18
VSW      DS   X
NUMVLIBS DS   H
NUMVLIBN EQU  25
VTAMLIBS DS  (NUMVLIBN)CL50 UP TO 10  DSNAMES
          ORG  VTAMLIBS       SET UP DYNALLOC DSN TU
VLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
VLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
VLLEN    DC    AL2(44)   LENGTH OF PARM
VLARM    DC    CL44'SYS1.VTAMLST'   DSNAME
NUMVLSTS DS   H
NUMVLSTN   EQU 10
         DS  0F
VTAMLSTS DS  (NUMVLSTN)CL50 UP TO 8   DSNAMES
          ORG  VTAMLSTS       SET UP DYNALLOC DSN TU
VKEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
VNUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
VPLEN    DC    AL2(44)   LENGTH OF PARM
VOFF     EQU   *-VKEY     OFFSET TO DSNAME
VPARM    DC    CL44'SYS1.VTAMLIB'   DSNAME
          ORG  NUMVLIBS
NUMLPAS  DS   H
NUMLPAN  EQU  25
LPALIBS DS  (NUMLPAN)CL50 UP TO 25  DSNAMES  PER LPALST ENTRY
          ORG  LPALIBS       SET UP DYNALLOC DSN TU
         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DC    AL2(44)   LENGTH OF PARM
LPAOFF   EQU  *-LPALIBS    OFFSET TO DSNAME
LLARM    DC    CL44'SYS1.LPALIB'   DSNAME
          ORG
LPAHLEN   EQU  *-LPALIBS
          ORG  NUMVLIBS
NUMPLIBS DS   H
NUMPLIBN EQU  25
PROCLIBS DS  (NUMPLIBN)CL50 UP TO 28  DSNAMES
          ORG  PROCLIBS       SET UP DYNALLOC DSN TU
PLEY     DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
PLUM     DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
PLLEN    DC    AL2(44)   LENGTH OF PARM
POFF     EQU  *-PROCLIBS   OFFSET TO DSNAME
PLARM    DC    CL44'SYS1.PROCLIB'   DSNAME
          ORG
BLDLLIST  DS   0H
BLDLNUM   DS   H   NUMBER OF ENTRIES
BLDLLEN  DS   H   LEN OF EACH ENTRY
BLDENTRY  EQU  *
BLDLNAME  DS  CL8
BLDLTTR   DS  XL3
BLDLCCAT  DS  X   CONCAT NUMBER RETURNED BY BLDL
BLDLZ     DS  X   WHERE ENTRY FOUND
BLDLELEN  EQU  *-BLDENTRY  LEN OF EACH ENTRY
          DS   0F
DSERVOUT  DS   F
DSERVLEN  DS   F
NUMMEMBS  DS  F
CURMEMBS  DS  F
LOADMEMB  DS  CL8
IEASYS   DS  CL8
LPALST   DS  CL8
         DFHEIEND
         PRINT ON,GEN
*********************************************************************** COP00210
*********************************************************************** COP00250
* NAME: WMOD                                                            COP00290
* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310
*                                                                       COP00420
**********************************************************************  COP00430
WMOD     DFHEIENT CODEREG=BASE,DATAREG=DATAREG,EIBREG=EIBREG            COP00440
BEGIN    DS    0H
         ST    EIBREG,EIBADDR       TCA ADDR
         ST    DATAREG,DATAADDR     TCA ADDR
         ST    13,SAVER13
***       L     13,DFHEIRS1          CSA
          DFHCSAD TYPE=LOCATE,REG=13
          ST    13,CSAADDR
        USING DFHCSADS,13
          MVC  RELSW,CSACIREL
           CLI RELSW,X'32'
           BL   SKIPSETM
          SETM  ON
SKIPSETM  DS   0H
          L    TCACBAR,CSACDTA          TCA USER
         DROP  13
         ST    TCACBAR,TCAADDR           TCA ADDR
         L     TCTTEAR,TCAFCAAA     LOAD TCT BASE                       COP00470
         ST    TCTTEAR,TCTADDR
         L     TIOABAR,TCTTEDA      LOAD TIOA BASE                      COP00480
         ST    TIOABAR,TIOADDR
         XR    5,5                 CLEAR REG 5                          COP00490
         MVC    WORKPROG,PROGRAM
         L     15,=A(TRTAB)        TRANSLATE 00 TO BLANK
         TR  WORKPROG,0(15)
          SETM   OFF
          MVC  LASTSBA,=A(SBATAB)
*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA
         L   LINKREG,=A(CHKSLIB)
        BALR  RET,LINKREG
         TM   WORKSW,LOADSTEP
         BO   DOSTEP       IS IN STEPLIB/JOBLIB
          B   TESTSVC
TESTSVC   DS   0H
         TM   WORKSW,LOADSVC
         BNO  TESTLINK       CHECK LINKLIST
         MVC WORKDSN,SVCDSN
         MVC WORKDDN,=CL8'SVCLIB'
         MVC  RETADDR,=A(TESTLINK)
         B    PUTOUT
DOSTEP   DS   0H
         XC   RETADDR,RETADDR
         XC   WORKDSN,WORKDSN
         XC   WORKDDN,WORKDDN
         L    LINKREG,=A(RDJFCB)
         ICM  LINKREG,8,=X'FF'   SIGNAL ROUTINE
        BALR  RET,LINKREG
         MVC   WORKDDN,=CL8'STEPLIB'
          MVC  RETADDR,=A(TESTSVC)
         B     PUTOUT    IF NOT STEPLIB SEARCH LINKLIST
TESTLINK  DS   0H
           TM  WORKSW,LOADLINK
          BO   DOLINK
          B   TESTLPA
DOLINK   DS    0H
          XC   WORKDDN,WORKDDN
          XC   WORKDSN,WORKDSN
         L    LINKREG,=A(SRCHLINK)
        BALR  RET,LINKREG
         MVC   WORKDDN,=CL8'LINKLIB'
          MVC  RETADDR,=A(TESTLPA)
          B    PUTOUT
TESTLPA    DS   0H   CHECK IF MODULE IN LPA
          L    LINKREG,=A(SRCHSIT)  SEE IF LPA=YES OR PRVMOD
          BALR RET,LINKREG
***        B    DOLPA
DOLPA      DS   0H
          XC   WORKADDR,WORKADDR
          MVC  WORKDDN,=CL8'LPALIB'
          L    LINKREG,=A(SRCHLPA)
          BALR RET,LINKREG
          TM  WORKSW,LOADLPA
           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB
*         MVC RETADDR,=A(TESTVTAM)
          MVC RETADDR,=A(NAMELPA)
          MVI  WORKDSN,X'00'
          B   PUTOUT
NAMELPA   DS   0H
          XC   WORKDSN,WORKDSN
          XC   WORKDDN,WORKDDN
          L    LINKREG,=A(SRCHPLIB)  SEARCH PARMLIB FOR LPA NAMES
          BALR RET,LINKREG           SEARCH LPA DSNS FOR MEMBER
          TM  WORKSW2,LOADLPAN
           BNO TESTVTAM       TEST VTAMLIST AND VTAMLIB
          MVC RETADDR,=A(TESTVTAM)
          B   PUTOUT
TESTVTAM DS   0H
          XC   WORKDSN,WORKDSN
          XC   WORKDDN,WORKDDN
          L    LINKREG,=A(SRCHNET) VTAM DSNS FROM SYS1.PROCLIB(NET)
          BALR RET,LINKREG
           B    DOVTAM
DOVTAM     DS   0H
          MVC  WORKDDN,=CL8'VTAMLST'
          MVC RETADDR,=A(DOVLIB)
          TM  WORKSW2,LOADVLST
          BO  PUTOUT
          B   DOVLIB
DOVLIB    DS   0H
          MVC  WORKDDN,=CL8'VTAMLIB'
***       MVC RETADDR,=A(TESTRPL)
          MVC RETADDR,=A(TESTPROC)
          MVC WORKDSN,VTAMDSN
          TM   WORKSW2,LOADVLIB
          BO  PUTOUT
*         B   TESTRPL
          B   TESTPROC
TESTPROC  DS   0H
          XC   WORKDSN,WORKDSN
          XC   WORKDDN,WORKDDN
          L    LINKREG,=A(SRCHJES2) PROCLIB DSNS FROM JES2 PROC
          BALR RET,LINKREG
          MVC  WORKDDN,=CL8'SYSPROC'
          MVC RETADDR,=A(TESTRPL)
          TM  WORKSW2,LOADPROC
          BO  PUTOUT
          B   TESTRPL
TESTRPL  DS   0H
****LOCATE DCB FOR DFHRPL AND ISSUE BLDL FOR GIVEN MODULE
         MVC  WORKDDN,=CL8'DFHRPL'
         XC   BLDLTTR,BLDLTTR
         XC   WORKDSN,WORKDSN
         L   LINKREG,=A(FINDDCB)
        BALR  RET,LINKREG
         TM   WORKSW,LOADRPL
         BNO  NOPROG       PROGRAM NOT IN DFHRPL
         B    DORPL
DORPL    DS    0H
****READ JFCBS FOR DFHRPL AND EXTRACT DSN IN CONCATENATION****
         L   LINKREG,=A(RDJFCB)
        BALR  RET,LINKREG
         CLI   WORKDSN,X'00'
         BE    NOPROG
         MVC   RETADDR,=A(WHERLOAD)
         B     PUTOUT
NOPROG   DS   0H
          TM  WORKSW,FOUND
          BO  WHERLOAD    FIGURE OUT WHERE LOADED FROM
         MVC  OUTCON(ERRMESSL),ERRMESS
         MVC  PROGCON,WORKPROG
         MVC  MSL,=AL2(ERRMESSL)
          XC  RETADDR,RETADDR
          B   DOSEND
WHERLOAD  DS   0H
           MVC MSL,=AL2(FINL)
***IF PPT ENTRY AND LOAD MOD IN RPL, AND NOT IN LPA, ASSUME
***LOADED FROM RPL, EVEN IF IN STEPLIB OR LINKLIST
          MVC FINLIB,=CL8'DFHRPL'
          TM  WORKSW,LOADRPL    IS MODULE IN RPL
           BNO MAYBELPA         NO...
          TM  WORKSW,NOPPT      IS MODULE NOT IN PPT
          BO   MAYBELPA          YES..
           TM  WORKSW,LOADLPA   IS MOD ALSO IN LPA
          BNO  PUTFIN             NO..ASSUME RPL
           TM  WORKSW,NOLPA  NO..LPA SPECIFIED
          BO   PUTFIN     YES..THEN RPL
           B   MAYBELPA   MAY STILL BE LOADED FROM LPA
MAYBELPA  DS   0H
           MVC  FINLIB,=CL8'LPALIB'
          TM   WORKSW,LOADLPA    IS MODULE IN LPA
           BNO  MAYBESTP          NO..
           MVC  FINSOURC,WORKPROG
           CLC WORKPROG,=CL8'DFHIRP'  DFH MOD
            BE  PUTFIN
           CLC WORKPROG,=CL8'DFHCSVC' DFH MOD
            BE  PUTFIN
           CLC WORKPROG(3),=CL3'DFH'  DFH MOD
           BNE PUTFIN    ASSUME IN LPA IF NOT DFH
           L   LINKREG,=A(SRCHCSA)    LOCATE ADDR OF MODULE
           BALR RET,LINKREG      TO DETERMINE IF REALLY FROM LPA
           CLI  FINLIB,C' '
            BE MAYBESTP
           B   PUTFIN
MAYBESTP  DS   0H
           MVC  FINLIB,=CL8'STEPLIB'
           TM  WORKSW,LOADSTEP
           BO   PUTFIN
           MVC  FINLIB,=CL8'LINKLIB'
           TM  WORKSW,LOADLINK
            BO  PUTFIN
           MVC  FINLIB,=CL8'SVCLIB'
           TM   WORKSW,LOADSVC
            BO  PUTFIN
           TM  WORKSW,NOLPA          LPA=NO
           BO   MAYBERPL
            TM  WORKSW,LOADLPA
             BO  SETLPAY
           B    MAYBERPL
MAYBERPL   DS   0H
           MVC  FINLIB,=CL8'DFHRPL'
           TM   WORKSW,LOADRPL
            BO  PUTFIN
SETLPAY     DS   0H
           MVC  FINLIB,=CL8'LPALIB'
           TM   WORKSW,LOADLPA
            BO  PUTFIN
           MVC  FINLIB,=CL8'VTAMLST'
           TM   WORKSW2,LOADVLST
            BO  PUTFINS
           MVC  FINLIB,=CL8'VTAMLIB'
           TM   WORKSW2,LOADVLIB
            BO  PUTFIN
           MVC  FINLIB,=CL8'PROCLIB'
           TM   WORKSW2,LOADPROC
            BO  PUTFINS
           MVC  FINLIB,=CL8' '
           B    PUTFIN
PUTFINS   DS   0H
           MVC FINSOURC,=CL6'SOURCE'
PUTFIN    DS   0H
   EXEC CICS SEND FROM(FINOUT) LENGTH(MSL)  WAIT
         MVC  FINSOURC,BLANKS
         B   RETURN
PUTOUT   DS   0H
          OI   WORKSW,FOUND
         MVC   OUTCON(CONOUTL),CONOUT
          L    1,LASTSBA
           MVC  OUTSBA,1(1)
         MVC   PROGCON,WORKPROG
         MVC  DDNCON,WORKDDN
         MVC  MSL,=AL2(CONOUTL)
         CLI  WORKDSN,X'00'
         BE   *+14
         MVC  DSNCON,WORKDSN
          B   DOSEND
****     MVC  DSNCONAT(ATCONL),BLANKS
         MVC  DSNCON(3),=CL3'AT '
         MVC  DSNCON+4(L'WORKCDDR),WORKCDDR
         CLI  WORKALIS,X'00'
          BE  DOSEND
          MVC DSNCONAL,=C' (ALIAS OF '
          MVC DSNALIS,WORKALIS
          MVI  DSNCONAP,C')'
          B   DOSEND
DOSEND   DS    0H
      EXEC CICS SEND FROM(OUTCON) LENGTH(MSL)
          L  1,LASTSBA
          LA  1,5(1)
          ST  1,LASTSBA
         OC  RETADDR,RETADDR
         BZ   RETURN
          L   1,RETADDR
         BR   1
RETURN   DS   0H
         EXEC CICS RETURN
ERRMESS  DS    0C
****      DC  X'11C2601DC0'  ROW3 COL1
         SBA  3,1
ERRPROG  DS   CL8
        DC C' NOT FOUND        '
ERRMESSL EQU  *-ERRMESS
BLANKS   DC  30C' '
CONOUT   DS   0C
***       DC  X'11C2601DC0'  ROW3 COL1
         SBA  3,1
CONPROG  DS  CL8
         DC C' IS IN DDN   '
CONDDN   DC  CL8' '
          DC  C' '
CONDSN   DC  CL42' '
CONOUTL  EQU  *-CONOUT
SVCDSN   DC  CL(L'WORKDSN)'SYS1.SVCLIB'
CONLPA  DC  C' NOT LOADED FROM LPA'
FINOUT   DS   0C
***       DC  X'11C2601DC0'  ROW3 COL1
         SBA  20,13
FINSOURC  DC  CL8' '
         SBA  20,20
         DC  C' MODULE LOADED FROM '
FINLIB    DS  CL8
FINL     EQU  *-FINOUT
         LTORG
          EJECT
RDJFCB  DS   0H
       PRINT ON,GEN
       USING *,LINKREG
       STM  14,12,SAVELINK+12
        LA  13,SAVEMAC
         MVC  WARLAREA(ARLENGTH),CRL       MOVE TO DYNAMIC STORAGE
         LA   ARLREG,WARLAREA
         STCM  ARLREG,7,WXADD  STORE ADDR OF JFCBAREA IN EXLIST
         USING ARL,ARLREG
         MVC   ARLRETRV,=H'1'  ONLY WANT INFO FOR 1 DATASET
         SR    0,0
         IC    0,BLDLCCAT   RELATIVE CONCAT NUMBER
         AH    0,=H'1'    ACTUAL CONCAT NUMBER
         STH   0,ARLFIRST    DS   WITH THIS CONCAT NUMBER
          DROP  ARLREG
         MVI  WXJFCB,X'13'   CODE FOR CONCATENATION EXIT
          MVC  WDCB,OPEJFCB  MOVE DCB
          CLM   LINKREG,8,=X'FF'
          BNE  *+10
          MVC  WDCB,STEPDCB
          LA   1,WDCB
         USING IHADCB,1
         LA  2,WXJFCB   RESET EXLST ADDR IN DCB
         ST   2,DCBEXLST
         DROP   1
         MVC  WDJLIST,RDJLIST   MOVE RDJFCB LIST TO WORK AREA
         LA   2,WDCB
         STCM 2,7,WDJDCBA    STORE DCB ADDR IN RDJFCB LIST
         LA   1,WDJLIST
      RDJFCB   0(2),MF=(E,(1))                                          JFC00420
         LTR  15,15
         BNZ   ENDJFCB
        B   PROCJFCB
PROCJFCB DS   0H  FIND JFCB FOR CONCAT NUMBER FROM BLDL
         LA   ARLREG,WARLAREA
         USING ARL,ARLREG
          L    1,ARLAREA  RESPONSE FROM RDJFCB
          USING ARAD,1
          LA   JFCBREG,ARAJFCB
          DROP   1
          USING JFCB,JFCBREG
          MVC  WORKDSN,JFCBDSNM    SAVE DSNAME
          B    FREEJFCB
FREEJFCB DS   0H   FREE ARA
****ISSUE FREEMAIN FOR STORAGE AREAS*****
      SR  2,2
      IC  2,ARLPOOL SUBPOOL
      L   3,ARLAREA  ADDR OF ARA
       SR   0,0
      ICM  0,7,ARLRLEN
       DROP  ARLREG
   FREEMAIN RU,LV=(0),SP=(2),A=(3)
       B  ENDJFCB
GETOUT  DS   0H
   EXEC CICS RETURN
ENDJFCB DS   0H
        LM   14,12,SAVELINK+12
        L    13,SAVER13
        BR    RET
***ALLOCATION RETRIEVAL LIST
CRL  IHAARL  DSECT=NO,PREFIX=CRL,DESCR=NO
EXJFCB   DS    0F                                                       JFC00600
         DC   X'13'           FOR LAST ENTRY                            JFC00610
EXADD    DS   AL3(CRL)                                                  JFC00620
OPEJFCB   DCB   DDNAME=DFHRPL,EXLST=EXJFCB,MACRF=(E)                         JFC
STEPDCB   DCB   DDNAME=STEPLIB,EXLST=EXJFCB,MACRF=(E)                         JF
RDJLIST    RDJFCB   (2),MF=L
         DROP  LINKREG
         LTORG
         EJECT
FINDDCB  DS   0H
         USING *,LINKREG
         STM  14,12,SAVELINK+12
         LA   13,SAVEMAC
         L   1,16   CVT
         L   1,0(1)  ADDR OF TCB POINTER
         L   1,4(1)   ADDR TCB
         LR  TCBREG,1
         B    NEXTTCB2
         USING TCB,TCBREG
NEXTTCB  DS   0H
         L    TCBREG,TCBBACK  PREV TCB
NEXTTCB2 DS    0H
         LTR  TCBREG,TCBREG
         BZ    RETDCB
         ST   TCBREG,TCBADDR
**CHECK IF DFHSIP TCB
         L    JSCBREG,TCBJSCB
         USING IEZJSCB,JSCBREG
         CLC  JSCBPGMN,=CL8'DFHSIP'
         BNE  RETDCB
         DROP  JSCBREG
         L    TIOTREG,TCBTIO   TIOT
         ST   TIOTREG,TIOTADDR
         L    DEBREG,TCBDEB    DEB QUEUE
         ST   DEBREG,DEBADDR
         DROP  TCBREG
         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY
         USING  XIOT,TIOTREG
         SR    0,0
FINDTIOT  DS   0H
         CLI   XIOELNGH,X'00'
         BE    RETDCB
         CLC   XIOEDDNM,=CL8'DFHRPL'
         BE   GOTRPL
         IC  0,XIOELNGH   LEN OF ENTRY
         AR   TIOTREG,0    NEXT ENTRY
         B    FINDTIOT
***LOCATE DFHRPL IN TIOT
GOTRPL   DS    0H
         ST   TIOTREG,RPLADDR
****LOCATE DEB FOR DFHRPL****
****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING RPLADDR
         L    DEBREG,DEBADDR
         USING DEBBASIC,DEBREG
         B     FINDDEB
NEXTDEB   DS    0H
          CLC   DEBDEBAD+1(3),=XL3'000000'
          BZ   NEXTTCB
          L    DEBREG,DEBDEBAD     NEXT DEB
FINDDEB   DS    0H
       CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?
         BNE   NEXTTCB
         L     DCBREG,DEBDCBAD    ADDR DCB
         USING IHADCB,DCBREG
         TM    DCBDSORG,DCBDSGPO  PARTITONED DATA SET?
         BNO   NEXTDEB          NO..NEXT DEB ENTRY
         TM    DCBOFLG,DCBOFOPN  DATA SET OPEN?
          BNO  NEXTDEB         NO....
         LH    0,DCBTIOT     OFFSET IN TIOT  FOR THIS DCB
          L    1,TIOTADDR
         AR    1,0         TIOT ADDR FOR THIS ENTRY
          C    1,RPLADDR   SAME AS FOR DFHRPL
          BE   GOTDCB     YES
          B    NEXTDEB
GOTDCB    DS    0H
          ST  DCBREG,DCBADDR  DFHRPL DCB
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LR   2,DCBREG
          LA   0,BLDLLIST
          BLDL  (2),(0)
           LTR 15,15
          BNZ  ENDFDCB
           OI  WORKSW,LOADRPL
          B   ENDFDCB
ENDFDCB  DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
RETDCB   DS   0H
         L   13,SAVER13
         EXEC CICS RETURN
          LTORG
         DROP  LINKREG,TIOTREG,TCBREG,DEBREG,DCBREG
          EJECT
CHKSLIB   DS   0H   CHECK IF MODULE IN JOBLIB OR STEPLIB
          USING *,LINKREG
          STM   14,12,SAVELINK+12
***SEE IF PROG IN PPT
           L   13,SAVER13
   EXEC CICS HANDLE CONDITION ERROR(NOTINPPT)
   EXEC CICS INQUIRE PROGRAM(WORKPROG)
           B  GOSTEP
NOTINPPT   DS   0H
           OI  WORKSW,NOPPT
           B  GOSTEP
GOSTEP    DS   0H
          LA    13,SAVEMAC
         L   1,16   CVT
         L   1,0(1)  ADDR OF TCB POINTER
         L   1,4(1)   ADDR TCB
          ST  1,TCBADDR
           USING TCB,1
            L   DCBREG,TCBJLB
            DROP  1
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LA   0,BLDLLIST
          BLDL (DCBREG),(0)
          LTR  15,15
          BNZ  CHKSVC
           OI  WORKSW,LOADSTEP
          B   CHKSVC
CHKSVC    DS   0H
          L   CVTREG,16
           USING CVT,CVTREG
           L   DCBREG,CVTSVDCB  DCB FOR SYS1.SVCLIB
           DROP  CVTREG
          LA   0,BLDLLIST
          BLDL  (DCBREG),(0)
          LTR  15,15
          BNZ  CHKLINK
           OI  WORKSW,LOADSVC
          B   CHKLINK
CHKLINK   DS   0H
          L    CVTREG,16
          USING CVT,CVTREG
***ISSUE BLDL ON LINKLIST
          MVC SAVELINK,CVTLLTA LINK LIST
          L    DCBREG,CVTLINK  ADDR LINKLIST DCB
           DROP CVTREG
          XC   BLDLTTR,BLDLTTR
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LA   0,BLDLLIST
          BLDL  (DCBREG),(0)
          LTR  15,15
          BNZ  ENDSLIB
          OI  WORKSW,LOADLINK
           B  ENDSLIB
ENDSLIB  DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
          LTORG
          DROP  LINKREG
          EJECT
SRCHLINK  DS   0H   SEARCH LINK LIST FOR DSNAME
          USING *,LINKREG
          STM   14,12,SAVELINK+12
          LA    13,SAVEMAC
          L    CVTREG,16
          USING CVT,CVTREG
          L   LLTREG,CVTLLTA   LINK LIST
          LA   LLTREG,LLTOFF(LLTREG) FIRST ENTRY
          USING LLTE,LLTREG
          SR   1,1
          IC  1,BLDLCCAT  CONCATENTATION NUMBER
          LTR  1,1
           BZ   GOTLLT
NEXTLLT   DS   0H
          LA   LLTREG,LLTLEN(LLTREG)  NEXT ENTRY
          BCT  1,NEXTLLT     LOOP CONCAT NUMBER OF TIMES
          B   GOTLLT
GOTLLT    DS   0H
          MVC WORKDSN,LLTDSN
          B   ENDSLINK
ENDSLINK DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
          LTORG
          DROP  LINKREG
          EJECT
****
SRCHLPA DS   0H   SERCH FOR MODULE IN LPA
       PRINT ON,GEN
       USING *,LINKREG
       STM  14,12,SAVELINK+12
        XC   WORKALIS,WORKALIS
        LA  13,SAVEMAC
         L   CVTREG,16
         USING CVT,CVTREG
         L    LPDEREG,CVTLPDIA  LPA DIRECTORY
         DROP  CVTREG
         USING  LPDE,LPDEREG
TSTLPA   DS     0H
         TM     LPDEATTB,LPDELPDE  LPDE IDENTIFIER
         BNO    ENDSLPA
         CLI    LPDENAME,X'00'
          BE    ENDSLPA
         CLC   WORKPROG,LPDENAME
         BE    GOTLPA
         LA    LPDEREG,LPDELEN(LPDEREG)
          B     TSTLPA
GOTLPA   DS    0H
**********MOD FOR ALIAS*****************
          TM   LPDEATT2,LPDERLC    RELOCATED ALIAS ENTRY POINT?
          BO    LPALIAS
          TM   LPDEATTR,LPDEMIN    MINOR LPDE?
           BO  LPALIAS
          MVC  WORKADDR,LPDEXTAD    LOAD ADDRESS
           OI   WORKSW,LOADLPA
CONVADDR   DS   0H
           OI   WORKSW,LOADLPA
A  CONVCODE IN=WORKADDR,OUT=WORKCDDR,LEN=L'WORKADDR
****LOCATE WHICH LPA LIB MODULE WAS LOADED FROM****
          L   LINKREG2,=A(WMODLPA)
          BALR  RET2,LINKREG2
          B    ENDSLPA
LPALIAS   DS   0H
          L    LPDEREG,LPDEMJP  POINT TO MAJOR LPDE
          MVC   WORKALIS,LPDENAME
          MVC  WORKADDR,LPDEXTAD   ADDRESS
          DROP  LPDEREG
          B    CONVADDR
ENDSLPA  DS    0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
         LTORG
         DROP  LINKREG
         EJECT
****
WMODLPA  DS     0H
         USING *,LINKREG2
         STM   14,12,SAVEREG2+12
         LH   1,=AL2(LPADSNAL)
         STH  1,LEN
  EXEC CICS GETMAIN SET(15) LENGTH(LEN) INITIMG(X'00') NOSUSPEND
            ST 15,LPADSNSA
            MVC 0(11,15),=CL11'SYS1.LPALIB'
            LA  15,LPADSNTL(15)
            ST 15,LASTLPA
****1. ALLOCATE SYS1.PARMLIB(LPALST00)
****2. READ AS TDQ AND SAVE LIST OF DATASETS
****3. CONCATANATE AND ALLOCATE UNDER LPALIB
****4. ISSUE BLDL AND DETERMINE DSN
*****FIND A TD QUEUE********************
        L   13,CSAADDR
        USING DFHCSADS,13
        SETM  ON
        L   DCTCBAR,CSADCTBA    ADDRESS OF DCT
        DROP   13
         USING DFHDCTDS,DCTCBAR
         MVC  WORKQUE,PARMQUE
*********DCT IN RDO**
        AIF  ('&SYSPARM' LT '51').DCTNOT5D
******************************************
**************************************************
      EXEC CICS IGNORE CONDITION ERROR
      EXEC CICS SET     TDQUEUE(WORKQUE)  DISABLED CLOSED
      EXEC CICS DISCARD TDQUEUE(WORKQUE)
      EXEC CICS HANDLE CONDITION ERROR(ENDWLPA)
 EXEC CICS CREATE TDQUEUE(WORKQUE)  ATTRLEN(TDDEFL) ATTRIBUTES(TDDEF)
        MVC  WORKDQE,WORKQUE
        MVC  SDNTXPRM,BLANKS
        MVC  SDNTXPRM(L'WORKQUE),WORKQUE
       B TDQFOUND
TDDEF   DS   0H
 DC C'TYPE(EXTRA) OPENTIME(DEFERRED) DDNAME(WMD1) TYPEFILE(INPUT) '
TDDEFL  DC AL2(*-TDDEF)
***END***DCT IN RDO**
FINDDCT  DS    0H
         CLC   TDDCTDID,=XL4'FFFFFFFF'          END OF TABLE
         BE    ENDWLPA                 YES...END
         TM    TDDCTDT,TDEXTRBM        EXTRA PARTITION
         BNO   NEXTDCT                NO...EXTRA PARTIT IS FIRST
         CLC  WORKQUE(3),TDDCTDID    NAME MATCH
          BNE   NEXTDCT            NO
     AIF ('&SYSPARM' LT '32').TDV2
***      TM    TDEXSFL2,TDEXCLIP+TDEXCLOS  CLOSED OR BEING CLOSED
         TM    TDEXSFL2,TDEXCLOS  CLOSED
         BNO   NEXTDCT               NO..
         B   GOTDCT
         AGO  .NEXTDCT
.TDV2    ANOP
         TM  TDDCTCBA,TDDCTOPN    OPEN?
         BO    NEXTDCT            YES  ..
         B   GOTDCT
.NEXTDCT ANOP
NEXTDCT  DS    0H
         AH    DCTCBAR,TDDCTELN     ADD LENGTH FOR NEXT ENTRY
         B    FINDDCT
GOTDCT   DS    0H
     AIF ('&SYSPARM' GT '32').TDV3
DDNOFF   EQU  X'38'           OFFSET TO DDNAME
         L    1,TDDCTSDS   SDSCI
         LA   1,DDNOFF(1)
         MVC  WORKDQE,0(1)   DDNAME
         MVC  SDNTXPRM,WORKDQE            DDNAME
         AGO   .TDVC
.TDV3    ANOP
         MVC   WORKDQE,TDEXNSDS     SAVE DDNAME
         MVC   SDNTXPRM,TDEXNSDS     SAVE  DDNAME FOR ALLOC
.TDVC     ANOP
         MVC   WORKQUE,TDDCTDID     SAVE  QNAME
         SETM   OFF
*         L    1,TDEXASDS          A(SDSCI)
*        LA     1,DCTSDSRL-DCTSDSCI(1)  ADD LRECL AFTER OPEN
*       ST    1,TDLRECLA
****************************************
TDQFOUND  DS   0H
         LA   1,DBPOINT
         DYNALLOC
         LA   1,SBPOINT
         DYNALLOC
          EXEC CICS HANDLE CONDITION ERROR(ENDPRMLB)
     AIF ('&SYSPARM' GT '32').TDOP
         MVC   OPQUE,WORKQUE
        LA    1,OPLIST
        ST    1,TCAOCLA              STORE FOR DFHOC
        L     13,CSAADDR
        USING DFHCSADS,13
        DFHOC TYPE=OPEN,DATASET=TRANSDATA,LISTADR=YES
         DROP  13
         B   OUTTDO
OPLIST    DS   0F
OPQUE     DC  CL8' '
OPERR     DC  CL4' '
OPFF      DC  X'FF'
OUTTDO    DS    0H
          AGO  .TDOR
.TDOP     ANOP
         EXEC CICS SET TDQUEUE(WORKQUE) OPEN
.TDOR     ANOP
NEXTGET   DS   0H
          EXEC CICS READQ TD QUEUE(WORKQUE) SET(1) LENGTH(LEN)
          LR  INREG,1
          ST   1,LASTIN
          LH  LENREG,LEN
           LR  0,INREG
           AR   0,LENREG
           ST   0,ENDORECA
          BCTR  LENREG,0
          L   15,LASTLPA
SCANDSN  DS   0H
***SCAN RCD   FOR FIRST ALPHA CHAR
          L   14,=A(ALPHTAB)
          EX    LENREG,TRTDSN
          BZ   NEXTGET
          SR  1,INREG   OFFSET OF FIRST CHAR
          AR  INREG,1    SET BEG OF RCD
          SR   LENREG,1  SET NEW LENGTH OF RCD
***SCAN RCD   FOR DELIMITERS AND EXTRACT DSNAMES
          L   14,=A(DELIMTAB)
          EX    LENREG,TRTDSN
          BZ   ATEND
          LR   0,1
          B    EXTRACT
ATEND     DS   0H
         L    0,ENDORECA
EXTRACT  DS    0H
         SR   0,INREG
         LR   LENREG,0
         L    15,LASTLPA
         XC   0(LPADSNTL,15),0(15)
         EX   LENREG,MOVEDSN
          LA  15,LPADSNTL(15)
          ST   15,LASTLPA
          AR  INREG,LENREG
          ST   INREG,LASTIN
          C  INREG,ENDORECA
          BNL NEXTGET
          L   LENREG,ENDORECA
          SR   LENREG,INREG
          B   SCANDSN
TRTDSN   TRT 0(0,INREG),0(14)
MOVEDSN  MVC 0(0,15),0(INREG)
ENDPRMLB DS   0H
      EXEC CICS IGNORE CONDITION ERROR
     AIF ('&SYSPARM' GT '32').TDCP
         MVC   OPQUE,WORKQUE
        LA    1,OPLIST
        ST    1,TCAOCLA              STORE FOR DFHOC
        L     13,CSAADDR
        USING DFHCSADS,13
        DFHOC TYPE=CLOSE,DATASET=TRANSDATA,LISTADR=YES
         DROP  13
          AGO  .TDCR
.TDCP     ANOP
      EXEC CICS SET TDQUEUE(WORKQUE) CLOSED
.TDCR     ANOP
         LA   1,DBPOINT     DEALLOCATE IT
         DYNALLOC
***ALLOCATE EACH LPA DATASET SEPARATELY, OPEN DCB, ISSUE BLDL TO SEE
***IF MODULE IS IN IT. DO ALL DATASETS STARTING WITH SYS1.LPALIB
***MAY NOT BE IN THE LIST
         MVC  ENDOFLPA,LASTLPA  ADDR OF LAST ENTRY
         L  15,LPADSNSA      ADDR LPALIST
NEXTBLDL  DS   0H
         ST  15,LASTLPA    FOR CURRENT ENTRY
         CLI  0(15),X'40'   ANYTHING IN THERE
         BNH  ENDWLPA       NO..
         L   14,=A(TRANTAB)  GET RID OF COMMA AND X'00'
         TR  0(LPADSNTL,15),0(14)
         MVC SSNTXPRM,0(15)   SET DSN ALLOC TU
         MVC SDNTXPRM,=CL8'LPALIB'  SET DDN TU
          LA  1,DBPOINT
           DYNALLOC      DEALLOCATE LPALIB DDN
         LA  1,LBPOINT
           DYNALLOC        ALLOCATE LPALIB DDN
          LTR 15,15
          BNZ  ENDWLPA
           LA  13,MVSSAVE
          OPEN (LPALIB,(INPUT))
         LTR 15,15
          BNZ  ENDWLPA
          MVC  LPAMEMB,WORKPROG
           BLDL LPALIB,LPALIST
            LTR 15,15
           BZ  *+12       MEMBER NOT IN DATASET
           L  1,LASTLPA
           MVI  LPADSNTL(1),C'Y' FLAG PRESENT
            NOPR 0
           CLOSE LPALIB
           L    15,LASTLPA
           LA  15,LPADSNTL(15)  NEXT LPA LIB
            C  15,ENDOFLPA      NO MORE ENTRIES
            BH   ENDWLPA
            B   NEXTBLDL
ENDWLPA  DS    0H
         AIF ('&SYSPARM' LT '51').NODISC
   EXEC CICS IGNORE CONDITION ERROR
   EXEC CICS DISCARD TDQUEUE(WORKQUE)
.NODISC   ANOP
          SETM  OFF
          LM  14,12,SAVEREG2+12
          BR   RET2
         DS  0F
SYNBLKS  DS   0F
DBPOINT  DC   A(DBS)  ADR  REQ BLOCK PASSED IN R1
         ORG   DBPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
SBPOINT  DC   A(SBS)  ADR  REQ BLOCK PASSED IN R1
         ORG   SBPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
LBPOINT  DC   A(LBS)  ADR  REQ BLOCK PASSED IN R1
         ORG   LBPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
         DS    0F
SBS     DS   0F
SB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT
SBLN     DC    AL1(SBEL)  LEN OF RB
SBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC
SBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
SBFLAG2  DS    X       2ND   FLAG BYTE
SBERROR  DS    XL2     ERROR REASON CODE
SBINFO   DS    XL2     INFO  REASON CODE
SBTXTPP  DC    A(SXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
SBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS
SBEL     EQU   *-SBS
* TEXT POINTERS  FOR ALLOCATION
SXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
SDNPOINT DC   A(SDNTEXT)    DDN TU
SSNPOINT DC   A(SSNTEXT)    DSN TU
SSMPOINT DC   A(SSMTEXT)    MEMBER TU
SSPPOINT DC   A(SSPTEXT)    DISP TU
         ORG  SSPPOINT    FOR LAST TU
         DC   X'80'
         ORG
SXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS
**DDN TEXT UNIT
SDNTEXT  DS    0F   DDN TEXT UNIT
SDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
SDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
SDNTXENT DS    0C
SDNPLEN  DC    AL2(L'SDNTXPRM)  LENGTH OF PARM
SDNTXPRM DC    CL8'PARMLIB'  DDNAME
**DSN  TEXT UNIT
SSNTEXT  DS    0F   DSN TEXT UNIT
SSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
SSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
SSNTXENT DS    0C
SSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM
SSNTXPRM DC    CL44'SYS1.PARMLIB'   DSNAME
**MEMBERNAME TEXT UNIT
SSMTEXT  DS    0F   DSN TEXT UNIT
SSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT
SSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
SSMTXENT DS    0C
SSMPLEN  DC    AL2(L'SSMTXPRM)   LENGTH OF PARM
SSMTXPRM DC    CL8'LPALST00'     MEMBERNAME
**DISP TEXT UNIT
SSPTEXT  DS    0F   DSP TEXT UNIT
SSPTXKEY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION
SSPTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
SSPTXENT DS    0C
SSPPLEN  DC    AL2(L'SSPTXPRM)  LENGTH OF PARM
SSPTXPRM DC    X'08'  DISP=SHR
SXLEN    EQU   *-SXUNITS
***FOR DEALLOCATION
DBS     DS   0F
DB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT
DBLN     DC    AL1(DBEL)  LEN OF RB
DBVERB   DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC
DBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
DBFLAG2  DS    X       2ND   FLAG BYTE
DBERROR  DS    XL2     ERROR REASON CODE
DBINFO   DS    XL2     INFO  REASON CODE
DBTXTPP  DC    A(DXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
DBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS
DBEL     EQU   *-DB
* TEXT POINTERS  FOR DEALLOCATION
DXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
DDNPOINT DC   A(SDNTEXT)  DDN TU
         ORG  DDNPOINT   FOR LAST TU
         DC  X'80'
         ORG
SYNEL    EQU  *-SYNBLKS
**********TO ALLOCATE LPA DSNS
LBS     DS   0F
LB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT
LBLN     DC    AL1(LBEL)  LEN OF RB
LBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC
LBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
LBFLAG2  DS    X       2ND   FLAG BYTE
LBERROR  DS    XL2     ERROR REASON CODE
LBINFO   DS    XL2     INFO  REASON CODE
LBTXTPP  DC    A(LXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
LBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS
LBEL     EQU   *-LBS
* TEXT POINTERS  FOR ALLOCATION  OF LPA LIBS
LXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
LDNPOINT DC   A(SDNTEXT)    DDN TU
LSNPOINT DC   A(SSNTEXT)    DSN TU
LSPPOINT DC   A(SSPTEXT)    DISP TU
         ORG  LSPPOINT    FOR LAST TU
         DC   X'80'
         ORG
********************************
PARMQUE  DC   CL4'WMD1'
*****FILE CONTROL BLOCKS*****                                           JRE06040
LPALIB DCB DSORG=PO,MACRF=(R),DDNAME=LPALIB
***BLDL LIST
LPALIST DS   0H
        DC  H'1'   1 ENTRY IN LIST
        DC  H'12'  12 BYTES LONG
LPAMEMB DS  CL8
         LTORG
         DROP  LINKREG2,DCTCBAR
         EJECT
****
SRCHSIT DS   0H   SEE IF LPA=NO OR PRVMOD FOR DFH MODULE
       PRINT ON,GEN
       USING *,LINKREG
       STM  14,12,SAVELINK+12
        L   13,SAVER13
*  EXEC CICS ADDRESS CSA(CSAREG)
          L   CSAREG,CSAADDR
        USING DFHCSADS,CSAREG
         CLI   RELSW,X'32'
          BL   NOSITM
          SETM  ON
NOSITM  DS    0H
         L     SITREG,CSASITBA   SIT TABLE
         DROP   CSAREG
          USING DFHSITDS,SITREG
           CLI  SITLPA,C'N'     LPA=NO
           BE   SETSIT0
          L    PRVREG,SITPRVMA   PRVMOD LIST
          DROP  SITREG
           LTR  PRVREG,PRVREG    ANY ENTRIES
           BZ   SETSIT4     NO...
           USING  PRVLIST,PRVREG
          LH   1,PRVNUM+2  NUMBER OF ENTRIES
           NOPR 0
           LA  15,PRVENTRY  FIRST ENTRY
TSTPRV     DS   0H
          CLC   WORKPROG,0(15)
           BE   SETSIT0
           LA   15,8(15)  NEXT ENTRY
           BCT  1,TSTPRV
           B    SETSIT4
          DROP  PRVREG
SETSIT0  DS    0H
          OI   WORKSW,NOLPA
          B    ENDSIT
SETSIT4   DS    0H
          NI   WORKSW,255-NOLPA
          B    ENDSIT
ENDSIT   DS    0H
          SETM  OFF
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
         LTORG
         DROP  LINKREG
         EJECT
****
SRCHCSA   DS   0H   SEARCH LINK LIST FOR DSNAME
          USING *,LINKREG
          USING DFHCSADS,CSAREG
          STM   14,12,SAVELINK+12
          MVC  FINLIB,=CL8' '
          L    CSAREG,CSAADDR
          NI   WORKADDR,255-X'80'
          B   SRCHCSA1
SRCHCSA1  DS  0H    KCP-TCP
          LA  1,CSAKCNAC   KCP ADDRA0
          LA  3,CSATCTCA   TCP ADDRB8
          LA  2,4            INCREMENT
GOCSA1    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA1
          B    SRCHCSA2
SRCHCSA2  DS  0H    SRP-FDP
          L  OPFLREG,CSAOPFLA
          USING CSAOPFL,OPFLREG
          LA  1,CSASRNAC   SRP20
           AIF ('&SYSPARM' GT '41').NOFDNAC
           LA  3,CSAFDNAC   FDP50
           AGO .AFDNAC
.NOFDNAC  ANOP
          LA  3,CSAKCSC    KC QUERY
.AFDNAC   ANOP
          LA  2,4            INCREMENT
GOCSA2    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA2
          B    SRCHCSA3
SRCHCSA3  DS  0H    DFHFCIN - EIP EXEC NUC
          LA  1,CSAFCXAD   DFHCIN   78
          LA  3,CSAEINAC   EXEC NUC A8
          LA  2,4            INCREMENT
GOCSA3    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA3
          B    SRCHCSA4
SRCHCSA4  DS  0H    RES MGR - TORS NUC    PGM
          LA  1,CSAERMNA   RES MGRFC
          AIF ('&SYSPARM' GT '41').NOTONNA
          LA  3,CSATONNA   TON 1B4
          AGO .ATONNA
.NOTONNA  ANOP
          LA  3,CSAZCQNA  ZCQ INSTALL
.ATONNA  ANOP
          LA  2,4            INCREMENT
GOCSA4    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA4
          B    SRCHCSA5
SRCHCSA5  DS  0H    DBCR    - ATT SEC     PGM
     AIF ('&SYSPARM' EQ '').IS32
     AIF ('&SYSPARM' LT '32').NOT32
.IS32     ANOP
          LA  1,CSADBCR    DBCR2DC       2DC
          LA  3,CSAZCUTN   ATTACH SEC USERID TABLE MGR 38C
          AGO  .CONTCSA5
.NOT32    ANOP
          LA  1,CSATRANA   FE GLOB TRAP  2D4
          LA  3,CSATRRNA   RECOV RTN FOR GLOBAL TRAP   2D8
.CONTCSA5  DS  0H
          LA  2,4            INCREMENT
GOCSA5    DS   0H
          MVC  DFHADDR,0(1)
          NI    DFHADDR,255-X'80'  SET OFF HI BIT
          CLC  WORKADDR,DFHADDR    COMPARE TO LPA ADDR
          BE   ISINLPA
          BXLE 1,2,GOCSA5
          B    NOTINLPA
ISINLPA   DS   0H
          MVC  FINLIB,=CL8'LPALIB'
          OI  WORKSW,LOADLPA
          B   ENDSCSA
NOTINLPA  DS   0H
*         MVC  FINLIB,=CL8'DFHRPL'
*         TM  WORKSW,LOADRPL
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8'STEPLIB'
*         TM  WORKSW,LOADSTEP
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8'LINKLIB'
*         TM  WORKSW,LOADLINK
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8'SVCLIB'
*         TM  WORKSW,LOADSVC
*         BO  ENDSCSA
*         MVC  FINLIB,=CL8' '
          B   ENDSCSA
ENDSCSA  DS   0H
          LM  14,12,SAVELINK+12
          L    13,SAVER13
          BR   RET
          LTORG
          DROP  LINKREG,OPFLREG,CSAREG
          EJECT
****
SRCHNET   DS   0H   SEARCH SYS1.PROCLIB(NET) FOR DSNAMES
          USING *,LINKREG
          STM   14,12,SAVELINK+12
          LA   1,NTPOINT       ALLOC PROCLIB
          DYNALLOC
*****READ NET MEMBER AND GET DSNS OF VTAMLIB AND VTAMLST
          MVI  VSW,0
          ST   13,MVSSAVE
          LA   13,MVSSAVE
          OPEN (PROCLIB,(INPUT))
          LTR  15,15
          BNZ  ENDPROC
NEXTPR     DS   0H
          GET PROCLIB
          CLC  0(9,1),=CL9'//VTAMLST'
          BE   GOTVLST
          CLC  0(9,1),=CL9'//VTAMLIB'
          BE   GOTVLIB
          B    NEXTPR
PREVLST   DS   0H
          TM  VSW,X'01'     VTAMLST PROCESSED?
          BO   ENDPROC
          CLC  0(9,1),=CL9'//VTAMLST'
          BE   GOTVLST
          B   NEXTPR
GOTVLST   DS   0H
          LR   2,1
          LA   3,VTAMLSTS
          OI   VSW,X'01'
          SCANARG 'DSN=',ADDR=14(2),LEN=20
          BZ   ENDPROC
          BAL  14,FDELIM
CONTVLST   DS   0H
          LA   3,L'VTAMLSTS(3)   NEXT ENTRY
          LH   0,NUMVLSTS
          AH   0,=H'1'
          STH  0,NUMVLSTS
          CH   0,=AL2(NUMVLSTN)
          BH   PREVLIB     MAX OF 10 DSNAMES
GETVLST   DS   0H
          GET  PROCLIB
          CLI  2(1),C'*'   COMMENT?
          BE   GETVLST
          CLI  2(1),C' '   CONCATENATION?
          BNE  PREVLIB     SEE IF //VTAMLIB
          LR   2,1
SC1       SCANARG 'DSN=',ADDR=14(2),LEN=20
          BZ   ENDPROC
          BAL  14,FDELIM
          B    CONTVLST
PREVLIB   DS   0H
          TM  VSW,X'02'     VTAMLIB PROCESSED?
          BO   ENDPROC
          CLC  0(9,1),=CL9'//VTAMLIB'
          BE   GOTVLIB
          B   NEXTPR
GOTVLIB   DS   0H
          LR   2,1
          LA   3,VTAMLIBS
          OI   VSW,X'02'
SC2       SCANARG 'DSN=',ADDR=14(2),LEN=20
          BZ   ENDPROC
          BAL  14,FDELIM
CONTVLIB   DS   0H
          LA   3,L'VTAMLIBS(3)
          LH   0,NUMVLIBS
          AH   0,=H'1'
          STH  0,NUMVLIBS
          CH   0,=AL2(NUMVLIBN)
          BH   PREVLST     MAX NUMBER SNAMES
GETVLIB   DS    0H
          GET  PROCLIB
          CLI  2(1),C'*'   COMMENT?
          BE   GETVLIB
          CLI  2(1),C' '   CONCATENATION?
          BNE  PREVLST     SEE IF //VTAMLST
          LR   2,1
SC3       SCANARG 'DSN=',ADDR=14(2),LEN=20
          BZ   ENDPROC
          BAL  14,FDELIM
          B    CONTVLIB
ENDPROC   DS   0H
          CLOSE PROCLIB
*****DEALLOCATE PROCLIB
          MVC  DEALCDDN,=CL8'PROCLIB'
          LA   1,DTPOINT       DEALLOC PROCLIB
          DYNALLOC
*******ALLOCATE VTAMLST LIBS
          LA  1,VTAMLSTS
          MVC  WORKDSN,VOFF(1)
          ST  1,VDSNAMEA
          MVC  VDDPARM,=CL8'VTAMLST'
          LA   1,VTPOINT       ALLOCATE VTAMLST
          DYNALLOC
          LTR  15,15
          BNZ  DEALVLST
*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********
          OPEN (VTAMLST,(INPUT))
          LTR  15,15
          BNZ   DEALVLST
*****BLDL VTAMLST
          LA  DCBREG,VTAMLST
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LR   2,DCBREG
          LA   0,BLDLLIST
          BLDL  (2),(0)
           LTR 15,15
          BNZ  DEALVLST
           OI  WORKSW2,LOADVLST
DEALVLST   DS   0H
           CLOSE  VTAMLST
          MVC  DEALCDDN,=CL8'VTAMLST'
          LA   1,DTPOINT       DEALLOC VTAMLST
          DYNALLOC
            TM  WORKSW2,LOADVLST
            BO ENDVLST
            B  NEXTVLSA  SEARCH OTHER LIBS IN CONCAT
*************************************************************
NEXTVLSA  DS    0H
          LH   1,NUMVLSTS
          LTR  1,1
          BZ   ENDVLST
          STH  1,CURNUM
          LA   1,VTAMLSTS+L'VTAMLSTS
          ST   1,CURVLST
******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************
ADDVLST   DS   0H
          ST   1,VDSNAMEA
          MVC  WORKDSN,VOFF(1)
          MVC  VDDPARM,=CL8'VTAMXXX'
          LA   1,VTPOINT       ALLOCATE VTAMLST
          DYNALLOC
          LTR  15,15
          BNZ  DEALVXXX
          OPEN (VTAMXXX,(INPUT))
          LTR  15,15
          BNZ   DEALVXXX
          LA  DCBREG,VTAMXXX
          LA   0,BLDLLIST
          BLDL  (DCBREG),(0)
           LTR 15,15
          BNZ  DEALVXXX
           OI  WORKSW2,LOADVLST
            B  DEALVXXX
DEALVXXX   DS   0H
           CLOSE VTAMXXX
*****DEALLOCATE VTAMXXX
          MVC  DEALCDDN,=CL8'VTAMXXX'
          LA   1,DTPOINT       DEALLOC VTAMXXX
          DYNALLOC
          TM  WORKSW2,LOADVLST
          BO  ENDVLST
          B  NEXTVLSB
NEXTVLSB   DS   0H
          LH   1,CURNUM
          BCTR 1,0
          LTR  1,1
          BZ  ENDVLST
          STH  1,CURNUM
          L    1,CURVLST
          LA   1,L'VTAMLSTS(1)
          ST   1,CURVLST
          B    ADDVLST
*         MVC  CDNDNAM1,=CL8'VTAMLST'
*         LA   1,CTPOINT       CONCATENATE TO VTAMLST
*         DYNALLOC
*         LTR  15,15
*         BNZ  DEALVXXX
*****OPEN VTAMLST
ENDVLST  DS   0H
          B  PROCVLIB         DO VTAMLIB
PROCVLIB  DS   0H
*******ALLOCATE VTAMLIB LIBS
          LA  1,VTAMLIBS
          MVC  VTAMDSN,VOFF(1)
          ST  1,VDSNAMEA
          MVC  VDDPARM,=CL8'VTAMLIB'
          LA   1,VTPOINT       ALLOCATE VTAMLST
          DYNALLOC
          LTR  15,15
          BNZ  DEALVLIB
*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********
          OPEN (VTAMLIB,(INPUT))
          LTR  15,15
          BNZ   DEALVLIB
*****BLDL VTAMLIB
          LA  DCBREG,VTAMLIB
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LR   2,DCBREG
          LA   0,BLDLLIST
          BLDL  (2),(0)
           LTR 15,15
          BNZ  DEALVLIB
           OI  WORKSW2,LOADVLIB
DEALVLIB   DS   0H
           CLOSE  VTAMLIB
          MVC  DEALCDDN,=CL8'VTAMLIB'
          LA   1,DTPOINT       DEALLOC VTAMLST
          DYNALLOC
            TM  WORKSW2,LOADVLIB
            BO ENDVLIB
            B  NEXTVLBA  SEARCH OTHER LIBS IN CONCAT
*************************************************************
NEXTVLBA  DS    0H
          LH   1,NUMVLIBS
          LTR  1,1
          BZ   ENDVLIB
          STH  1,CURNUM
          LA   1,VTAMLIBS+L'VTAMLIBS
          ST   1,CURVLST
******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************
ADDVLIB   DS   0H
          ST   1,VDSNAMEA
          MVC  VTAMDSN,VOFF(1)
          MVC  VDDPARM,=CL8'VTAMXXX'
          LA   1,VTPOINT       ALLOCATE VTAMLST
          DYNALLOC
          LTR  15,15
          BNZ  DEALVBXX
          OPEN (VTAMXXX,(INPUT))
          LTR  15,15
          BNZ   DEALVBXX
          LA  DCBREG,VTAMXXX
          LA   0,BLDLLIST
          BLDL  (DCBREG),(0)
           LTR 15,15
          BNZ  DEALVBXX
           OI  WORKSW2,LOADVLIB
            B  DEALVBXX
DEALVBXX   DS   0H
           CLOSE VTAMXXX
*****DEALLOCATE VTAMXXX
          MVC  DEALCDDN,=CL8'VTAMXXX'
          LA   1,DTPOINT       DEALLOC VTAMXXX
          DYNALLOC
          TM  WORKSW2,LOADVLIB
          BO  ENDVLIB
          B  NEXTVLIB
NEXTVLIB   DS   0H
          LH   1,CURNUM
          BCTR 1,0
          LTR  1,1
          BZ  ENDVLIB
          STH  1,CURNUM
          L    1,CURVLST
          LA   1,L'VTAMLIBS(1)
          ST   1,CURVLST
          B    ADDVLIB
*         MVC  CDNDNAM1,=CL8'VTAMLST'
*         LA   1,CTPOINT       CONCATENATE TO VTAMLST
*         DYNALLOC
*         LTR  15,15
*         BNZ  DEALVXXX
ENDVLIB  DS   0H
          B  ENDNET
ENDNET   DS   0H
          LM  14,12,SAVELINK+12
          L    13,MVSSAVE
          BR   RET
FDELIM    DS    0H    FIND DELIMITER IN DSNAME
          STM  14,12,RTNSAVE+12
          MVC VOFF(44,3),=44C' '
          LA   15,4(1)
          L    14,=A(DELIMTAB)
          TRT  0(44,15),0(14)
          SR   1,15
          LTR  1,1
          BZ   *+6
          BCTR  1,0
          EX   1,MOVEVTN
          MVC  0(DALCONSL,3),DALCONS
          LM   14,12,RTNSAVE+12
          BR   14
MOVEVTN   MVC VOFF(0,3),0(15)
DALCONS   DS  0H
         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DC    AL2(44)   LENGTH OF PARM
DALCONSL EQU  *-DALCONS
PROCLIB DCB DSORG=PS,MACRF=GL,DDNAME=PROCLIB,EODAD=ENDPROC
VTAMLST DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLST
VTAMLIB DCB DSORG=PO,MACRF=(R),DDNAME=VTAMLIB
VTAMXXX DCB DSORG=PO,MACRF=(R),DDNAME=VTAMXXX
******TO CONCATENATE DATASETS
         DS  0F
CTPOINT  DC   A(CBS)  ADR  REQ BLOCK PASSED IN R1
         ORG   CTPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
         DS    0F
CBS     DS   0F
         DS    0CL20  S99RB DSECT  LOC BY SBPOINT
         DC    AL1(CBEL)  LEN OF RB
         DC    AL1(S99VRBCC)     03 FOR CONCAT
         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
         DS    X       2ND   FLAG BYTE
         DS    XL2     ERROR REASON CODE
         DS    XL2     INFO  REASON CODE
         DC    A(CXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
         DS    XL4     FLAGS FOR AUTH FUNCTIONS
CBEL     EQU   *-CBS
* TEXT POINTERS  FOR CONCATENATION
CXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
CDNPOINT DC   A(CDNTEXT)    DDN TU
         ORG  CDNPOINT    FOR LAST TU
         DC   X'80'
         ORG
CDNTEXT  DS    0F   DDN TEXT UNIT
         DC    AL2(DCCDDNAM)  KEY FOR CONCATENATION
CDNTXNUM DC    XL2'0002'   NUM LENGTH + PARM ENTRIES
CDNPLEN1 DC    AL2(8)           LENGTH OF PARM DDNAME
CDNDNAM1 DC    CL8'VTAMLST'  DDNAME   TO CONCAT TO
CDNPLEN2 DC    AL2(8)           LENGTH OF PARM DDNAME
CDNDNAM2 DC    CL8'VTAMXXX'  DDNAME   TO CONCAT WITH
******TO ALLOC SYS1.PROCLIB
         DS  0F
NTPOINT  DC   A(NBS)  ADR  REQ BLOCK PASSED IN R1
         ORG   NTPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
         DS    0F
NBS     DS   0F
NB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT
NBLN     DC    AL1(NBEL)  LEN OF RB
NBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC
NBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
NBFLAG2  DS    X       2ND   FLAG BYTE
NBERROR  DS    XL2     ERROR REASON CODE
NBINFO   DS    XL2     INFO  REASON CODE
NBTXTPP  DC    A(NXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
NBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS
NBEL     EQU   *-NBS
* TEXT POINTERS  FOR ALLOCATION
NXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
NDNPOINT DC   A(NDNTEXT)    DDN TU
NSNPOINT DC   A(NSNTEXT)    DSN TU
NSMPOINT DC   A(NSMTEXT)    MEMBER TU
NSPPOINT DC   A(NSSPTEXN)   DISP TU
         ORG  NSPPOINT    FOR LAST TU
         DC   X'80'
         ORG
NXUNITS  DS    0F   S99TUNIT DSECT  TEXT UNITS
**DDN TEXT UNIT
NDNTEXT  DS    0F   DDN TEXT UNIT
NDNTXKEY DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
NDNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
NDNTXENT DS    0C
NDNPLEN  DC    AL2(L'NDNTXPRM)  LENGTH OF PARM
NDNTXPRM DC    CL8'PROCLIB'  DDNAME
**DSN  TEXT UNIT
NSNTEXT  DS    0F   DSN TEXT UNIT
NSNTXKEY DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
NSNTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
NSNTXENT DS    0C
NSNPLEN  DC    AL2(L'SSNTXPRM)   LENGTH OF PARM
NSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME
**MEMBERNAME TEXT UNIT
NSMTEXT  DS    0F   DSN TEXT UNIT
NSMTXKEY DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT
NSMTXNUM DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
NSMTXENT DS    0C
NSMPLEN  DC    AL2(L'NSMTXPRM)   LENGTH OF PARM
NSMTXPRM DC    CL8'NET     '     MEMBERNAME
**DISP TEXT UNIT
NSSPTEXN  DS    0F   DSP TEXT UNIT
DISPTEXT  EQU   *
NSSPTXKY DC    AL2(DALSTATS)  KEY FOR  DISPOSITION
NSSPTXNU  DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
NSPTXEND DS    0C
NSSPPLEN  DC    AL2(L'NSSPTXPR)  LENGTH OF PARM
NSSPTXPR DC    X'08'  DISP=SHR
NSXLEN    EQU   *-NXUNITS
***FOR DEALLOCATION
DTPOINT  DC   A(DBSD) ADR  REQ BLOCK PASSED IN R1
         ORG   DTPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
DBSD    DS   0F
NBDD     DS    0CL20  S99RB DSECT  LOC BY SBPOINT
NDBLND    DC    AL1(NDBELD)  LEN OF RB
NDBVERBD  DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC
NDBFLAD1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
NDBFLAD2  DS    X       2ND   FLAG BYTE
NDBERROR  DS    XL2     ERROR REASON CODE
NDBINFOD  DS    XL2     INFO  REASON CODE
NDBTXTPD  DC    A(NDXPOIND)     LIST OF TEXT PTRS
         DS    F       RESERVED
NDBAUTDL DS    XL4     FLAGS FOR AUTH FUNCTIONS
NDBELD     EQU   *-NBDD
* TEXT POINTERS  FOR DEALLOCATION
NDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST
NDDNPOID DC   A(DNDNTEXD)  DDN TU
         ORG NDDNPOID   FOR LAST TU
         DC  X'80'
         ORG
**DDN TEXT UNIT FOR DEALLOC
DNDNTEXD DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM
DEALCDDN DC    CL8'PROCLIB'  DDNAME
**********TO ALLOCATE VTAM DSNS
VTPOINT  DC   A(VBS) ADR  REQ BLOCK PASSED IN R1
         ORG   VTPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
VBS     DS   0F
VB       DS    0CL20  S99RB DSECT  LOC BY SBPOINT
VBLN     DC    AL1(VBEL)  LEN OF RB
VBVERB   DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC
VBFLAG1  DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
VBFLAG2  DS    X       2ND   FLAG BYTE
VBERROR  DS    XL2     ERROR REASON CODE
VBINFO   DS    XL2     INFO  REASON CODE
VBTXTPP  DC    A(VXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
VBAUTHFL DS    XL4     FLAGS FOR AUTH FUNCTIONS
VBEL     EQU   *-VBS
* TEXT POINTERS  FOR ALLOCATION  OF VTAM LIBS
VXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
VDNPOINT DC   A(VDDNAME)    DDN TU
VDSNAMEA DS   A             DSN TU
VSPPOINT DC   A(DISPTEXT)   DISP TU
         ORG  VSPPOINT    FOR LAST TU
         DC   X'80'
         ORG
**DDN TEXT UNIT
VDDNAME  DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM
VDDPARM  DC    CL8'VTAMLST'  DDNAME
          LTORG
          DROP  LINKREG
          EJECT
***********************************************
****
SRCHPLIB  DS   0H   SEARCH SYS1.PARMLIB FOR LPA  DSNAMES
          USING *,LINKREG
          STM   14,13,SAVELINK+8
*         CLOSE  PARMLIB
*         MVC  PEALCDDN,=CL8'PARMLIB'
*         LA  13,MVSSAVE
*         LA   1,PDPOINT    DE ALLOC PARMLIB
*         DYNALLOC
          LA   1,PTPOINT       ALLOC PARMLIB
          DYNALLOC
          CH  15,=H'4'
          BH   DEALPLIB
          OPEN (PARMLIB,(INPUT))
           LTR 15,15
           BNZ  DEALPLIB
            LA  1,PARMLIB
           USING IHADCB,1
           MVC  BLKSIZE,DCBBLKSI   SAVE BLOCKSIZE
           MVC  LRECL,DCBLRECL     SAVE RECORD LEN
           DROP 1
  EXEC CICS GETMAIN SET(15) LENGTH(BLKSIZE) INITIMG(X'00') NOSUSPEND
*           LH   0,BLKSIZE    FOR TSO
*           GETMAIN R,LV=(0)
*           LR   15,1
            ST   15,READAREA
            AH  15,BLKSIZE
            ST  15,ENDBLOCK
*****GET DIRECTORY AND LOCATE 'LOADXX' AND IEASYMXX MEMBERS
           SETM  ON
           LA   2,DSERVOUT
DS1        DESERV FUNC=GET_ALL,AREAPTR=(2),DCB=PARMLIB
            LTR  15,15
**           BNZ  DEALPLIB
             BNZ  ENDPARM
             L    2,DSERVOUT
             USING DESB,2
             MVC  DSERVLEN,DESB_LEN   NEED FOR FREEMAIN
             MVC  NUMMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS
             MVC  CURMEMBS,DESB_COUNT NUMBER OF MEMBERS IN PDS
             LA  2,DESB_DATA   POINT TO FIRST IGWSMDE ENTRY
             DROP 2
             USING SMDE,2
********LOOK FOR LOADXX AND IEASYM MEMBERS****************
LOOKSMDE     DS   0H
             LR  1,2
             AH  1,SMDE_NAME_OFF  OFFSET TO LEN/MEMB NAME ENTRY
             CLC 2(4,1),=CL4'LOAD'  LOADXX MEMBER?
             BE  GOTLOAD            YES
              L  1,CURMEMBS
              BCT  1,NEXTSMDE
NEXTSMDE     DS   0H
              ST  1,CURMEMBS
              A   2,SMDE_LEN   NEXT SMDE
              B   LOOKSMDE
GOTLOAD      DS   0H
*READ LOAD MEMBER AND EXTRACT INFO FROM IODF, PARMLIB, SYSPARM
*FIELDS. ASSUME THAT SECOND PARM IN IODF=&SYSNAME  (AS SPECIFIED
*IN IEASYS MEMBER) PARMLIB HAS REAL NAME OF SYS1.PARMLIB BEING USED
             MVC  LOADMEMB,BLANKS
             LH 15,0(1)  LENGTH OF MEMBER NAME
             BCTR 15,0
             EX  15,MOVELOAD
             L    2,DSERVOUT
             L    3,DSERVLEN
             FREEMAIN RC,A=(2),LV=(3)
             B   ENDPARM
ENDPARM     DS  0H
            SETM  OFF
DEALPLIB   DS   0H
          CLI  LOADMEMB,C' '
          BNH  OUTPLIB
***DETERMINE LPA CONCAT BY THE FOLLOWING:
***NEED TO DETERMINE VALUE OF SYSCLONE WHICH IS DEFINED WITH
***SUBSTITUTABLE VALUES IN IEASYM, WHICH WILL NOT BE USED HERE
***EVEN THOUGH IT CONTAINS THE REAL VALUE OF SYSCLONE.
** ON DOITT SYSTEMS, SYSCLONE IS DEFINED IN IEASYM AS THE
***FIRST AND LAST CHARACTERS OF SYSNAME.
***IT WILL BE ASSUMED THAT SYSCLONE IS EQUAL TO FIRST AND LAST CHARS
***OF SYSNAME EVEN THOUGH IT MAY NOT ALWAYS BE ON ALL SYSTEMS.
**1. READ LOADXX MEMBER TO GET SYSPARM VALUE, WHICH DEFINES IEASYSXX
**2. READ IEASYS&SYSPARM TO GET LPA SUFFIXES, ONE OF WHICH MAY BE
**   DEFINED AS &SYSCLONE. IEASYS MAY ALSO HAVE SYSNAME.
*******ALLOCATE AND READ LOAD MEMBER
         FIND  PARMLIB,LOADMEMB,D
         LTR  15,15
          BNZ  OUTPLIB
*****LOOK FOR SYSPARM FIELD IN LOADXX MEMBER
           L    2,READAREA
           ST  2,LASTBLOC
GETPLIBS   DS   0H
          READ READECB,SF,PARMLIB,(2),'S'
          CHECK READECB
          CLI  READECB,X'7F'
          BNE OUTPLIB
          LR  1,2
TESTPLIB  DS   0H
          CLC  0(7,1),=CL7'SYSPARM'
          BE  GOTSPARM
          CLC  0(4,1),=CL4'IODF'
          BE  GOTIODF
NEXTPLIB  DS   0H
          L   1,LASTBLOC
          AH  1,LRECL    NEXT RECORD
          C   1,ENDBLOCK
**        BH  OUTPLIB
          BH  IEASYS00
          ST  1,LASTBLOC
          B  TESTPLIB
GOTIODF   DS   0H    SECOND PARM IS SYSNAME
***LOADXX MEMBER IS COLUMN DEPENDENT. DATA STARTS IN COL 10.
**COL 10-11 HAS SUFFIX OF IODF MEMBER; COL 13 HAS HILEVEL QUALIFER
**ASSUME HI-LEVEL QUALIFIER IS SYNAME IF NOT SPECIFIED ANYWHERE ELSE
           ST  1,RECADDR
          MVC  SYSNAME,12(1)
          B   NEXTPLIB
GOTSPARM   DS   0H
**FIRST  PARM IS SYSTEM PARM SUFFIX
           ST  1,RECADDR
           L  15,=A(ALPHTAB)
          LR  14,1
           TRT 8(40,14),0(15)      FIND FIRST  ALPHA LETTER
          BZ   NEXTPLIB
           MVC SYSPARM,0(1)
**SINCE SYSCLONE IS DEFINED WITH SUBSTITUTABLES IN IEASYM MEMBER,
**SET SYSCLONE=SYSPARM
          MVC  SYSCLONE,SYSPARM
***       B   SEALPLIB
SEALPLIB   DS   0H
          CLI SYSPARM,C' '   SYSPARM FOUND
***       BNH OUTPLIB
           BH  IEASYS00
           B   NEXTPLIB
IEASYS00   DS   0H
           TM   WORKSW3,READSPRM   IEASYS&SYSPARM READ?
          BNO  DOSYSP             NO..
           TM   WORKSW3,READZPRM   IEASYS00       READ?
          BO   OUTPLIB            YES...GET OUT
          MVC  IEASYS+6(2),=CL2'00'
          OI   WORKSW3,READZPRM
          B    FINDSYSP
DOSYSP    DS   0H
*****READ IEASYS&SYSPARM MEMBER TO GET SYSNAME AND LPALIST PARMS
          OI   WORKSW3,READSPRM     FLAG READING IEASYS&SYSPARM
          MVC  IEASYS(6),=CL6'IEASYS'
          MVC  IEASYS+6(2),SYSPARM
FINDSYSP   DS   0H
         FIND  PARMLIB,IEASYS,D
         LTR  15,15
***       BNZ  OUTPLIB
          BNZ  IEASYS00    READ IEASYS00
*****LOOK FOR LPA= AND SYSNAME= PARMS IN IEASYS&SYSPARM  MEMBER
           L   2,READAREA
           ST   2,LASTBLOC
IETPLIBS   DS   0H
          READ IEADECB,SF,PARMLIB,(2),'S'
          CHECK IEADECB
          CLI  IEADECB,X'7F'
****      BNE OUTPLIB
          BNE  IEASYS00    READ IEASYS00
          LR  1,2
TESTILIB  DS   0H
          CLC  0(4,1),=CL7'LPA='
          BE  GOTLPAEQ
          CLC  0(8,1),=CL8'SYSNAME='
          BE  GOTSNAME
NEXTILIB  DS   0H
          L   1,LASTBLOC
          AH  1,LRECL    NEXT RECORD
          C   1,ENDBLOCK
***       BNL OUTPLIB
          BNL IEASYS00
          ST  1,LASTBLOC
          B  TESTILIB
GOTLPAEQ   DS   0H
           TM  WORKSW3,DIDLCONS  LPA= ALREADY PROCESSED
           BO   *+10             YES
           MVC  LPACONST,5(1)  SAVE STRING AND PARSE LATER
            OI   WORKSW3,DIDLCONS
          CLI  SYSNAME,C' '  SYSNAME FOUND YET
          BH   IEALPLIB      YES.. CLOSE PARMLIB
          B   NEXTILIB     NEXT RECORD
GOTSNAME   DS   0H
           OI  WORKSW3,DIDSNAME  SYSNAME ALREADY PROCESSED
          CLI  SYSNAME,C' '      SYSNAME ALREADY PROCESSED
           BH   *+10             YES
           MVC  SYSNAME,8(1)
          CLI  LPACONST,C' '  LPA     FOUND YET
          BH   IEALPLIB      YES.. CLOSE PARMLIB
          B   NEXTILIB     NEXT RECORD
IEALPLIA   DS   0H
           MVI  ERRSW,X'00'
IEALPLIB   DS   0H
           CLI  ERRSW,X'00'
           BNE  OUTPLIB
          CLI  LPACONST,C' '   LPA PARM FOUND
          BH   PROCLPA          YES
          B   OUTPLIB
LEALPLIB   DS   0H
           B   ENDPLIB
ENDPLIB  DS   0H
          CLI  LPACONST,C' '   LPA PARM FOUND
          BH   PROCLPA          YES
OUTPLIB   DS   0H
          CLOSE PARMLIB
          LA  1,PDPOINT    DEALLOCATE PARMLIB
          DYNALLOC
          LM  14,13,SAVELINK+8
          BR   RET
PROCLPA   DS   0H    READ LPALST MEMBERS
***FIRST SET UP ENTRY IN THE OUTPUT LIST FOR SYS1.LPALIB
          MVC  NUMLPAS,=H'1'
         LA   3,LPALIBS
          MVC  0(LPLCONSL,3),LPLCONS    FOR DYNALLOC
          MVC LPAOFF(44,3),=CL44'SYS1.LPALIB'
           LA  3,L'LPALIBS(3)
         ST  3,LASTLPA
********************************
SSLPA     SCANARG ')',ADDR=LPACONST,LEN=20   END OF LIST
          BZ   OUTPLIB
          ST  1,LASTCONA
          LA  2,LPACONST
          CLI 0(2),C'&&' SUBSTITUTABLE     &
          BE  SUBLPA
          CLI 2(2),C','   2 CHAR VALUE
          BNE  OUTPLIB     FORGET IT
MSLPA      DS   0H
          MVC LPALST(6),=CL6'LPALST'
          MVC LPALST+6(2),0(2)
          LA  2,3(2)     POINT TO NEXT PARM
          ST  2,NEXTCONA    SAVE ADDR
          B   ALLPALST
SUBLPA    DS   0H SUBSTITUTE VARIABLES
          BAL  14,SUBPARM
          B  ALLPALST
ALLPALST  DS   0H
          FIND PARMLIB,LPALST,D
          LTR 15,15
          BNZ  OUTPLIB
**         LA  3,LPALIBS
           L   3,LASTLPA
           L  2,READAREA
           ST  2,LASTBLOC
BUILDLPA   DS  0H
******BUILD DYNALLOC LIST FROM LPALST ENTRIES*****************
***ONLY READ ONE BLOCK FROM LPALST MEMBER TO AVOID EOF CONDITION
           ST  3,LASTLPA
          READ LEADECB,SF,PARMLIB,(2),'S'
          CHECK LEADECB
          CLI  LEADECB,X'7F'
          BNE OUTPLIB
          ST  2,LASTBLOC
          LR  1,2
          AH  1,BLKSIZE
           ST  1,ENDBLOCK
TESTLLIB   DS   0H
          BAL  14,LPELIM
           LH  0,NUMLPAS
           AH   0,=H'1'
           STH  0,NUMLPAS
           CH   0,=AL2(NUMLPAN)
           BH  DALPALST      YES
           L   3,LASTLPA
           LA  3,L'LPALIBS(3)
           ST  3,LASTLPA
          L   2,LASTBLOC
          AH  2,LRECL    NEXT RECORD
          C   2,ENDBLOCK
          BH  DALPALST
          CLC  0(4,2),=4X'00'    END OF BLOCK
          BE  DALPALST
          ST  2,LASTBLOC
          B  TESTLLIB
******END BUILD DYNALLOC LIST FROM LPALST ENTRIES**************
DALPALST   DS   0H
           MVC CURNUM,NUMLPAS
           LA   1,LPALIBS-L'LPALIBS
           ST  1,CURVLST
           B  NEXTLPST
**********ALLOCATE LPALIBS, OPEN, BLDL
NEXTLPST   DS   0H
          LH   1,CURNUM
          LTR  1,1
          BZ  DEALVLPA
          BCTR 1,0
          STH  1,CURNUM
          L    1,CURVLST
          LA   1,L'LPALIBS(1)
          MVC  LPADSN,LPAOFF(1)
*******BYPASS SYS1.DBN.SDBNLPA BECAUSE OF ERROR WITH DATASET
          CLC  LPADSN(16),=C'SYS1.DBN.SDBNLPA'
          BE   DEALVLPA
          ST   1,CURVLST
          ST  1,LPSNAMEA
*         MVC  PEALCDDN,=CL8'LPALIBN'
*         CLOSE LPALIBN
*         LA   1,PDPOINT       DEALLOC LPALST
*         DYNALLOC
          LA   1,LTPOINT       ALLOCATE LPALIB
          DYNALLOC
          CH  15,=H'4'
          BH   DEALVLPA
*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********
          OPEN (LPALIBN,(INPUT))
          LTR  15,15
          BNZ   DEALVLPA
*****BLDL LPALIB
          LA  DCBREG,LPALIBN
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LR   2,DCBREG
          LA   0,BLDLLIST
          BLDL  (2),(0)
           LTR 15,15
          BNZ  DEALVLPA
           OI  WORKSW2,LOADLPAN
           MVC  WORKDDN,=CL8'LPALIB'
           MVC  WORKDSN,LPADSN
DEALVLPA   DS   0H
           CLOSE  LPALIBN
          MVC  PEALCDDN,=CL8'LPALIBN'
          LA   1,PDPOINT       DEALLOC LPALST
          DYNALLOC
          MVC  PEALCDDN,=CL8'PARMLIB'  RESET
           TM  WORKSW2,LOADLPAN
           BO  OUTPLIB
          OC   CURNUM,CURNUM
           BZ   ENDVLPA1
           B   NEXTLPST
*************************************************************
ENDVLPA1 DS   0H
**PROCESS ADDITIONAL LPALIBS
          XC  NUMLPAS,NUMLPAS
          LA  2,LPALIBS
          ST  2,LASTLPA
          SR 1,1
          LA  3,LPAHLEN
          MVCL 2,0      CLEAR OUT
          L  2,NEXTCONA   NEXT PARM IN LPA=(XXX) FROM IEASYS
          CLI 0(2),C','
          BNE *+8
          LA  2,1(2)
          C   2,LASTCONA   END OF LIST
          BNL OUTPLIB
          CLI 0(2),C'&&'  SUBSTITUTABLE
          BE  SUBLPA
          CLI  0(2),C'L'   END OF LIST
          BE  OUTPLIB
          CLI  0(2),C','   2 CHAR VALUE
          BNE  OUTPLIB
          B  MSLPA
***END****ALLOCATE LPALIBS, OPEN, BLDL
**********************************
SUBPARM    DS   0H
**ADDR OF PARM TO BE SUBSTITUTED IN R2 'LPALSTXX'
          STM  14,12,RTNSAVE+12
          MVC LPALST(6),=CL6'LPALST'
          CLC  1(8,2),=CL8'SYSCLONE'
          BE   SP1CLONE
          CLC  1(7,2),=CL7'SYSNAME'
          BE   SP1NAME
          CLC  1(7,2),=CL7'SYSPARM'
          BE   SP1PARM
          MVC  NEXTCONA,LASTCONA
          LM   14,12,RTNSAVE+12
          BR   14
SP1CLONE   DS   0H
          MVC LPALST+6(2),SYSCLONE
          LA  2,10(2)     POINT TO NEXT PARM
          ST  2,NEXTCONA    SAVE ADDR
          LM   14,12,RTNSAVE+12
          BR   14
SP1NAME   DS   0H
          MVC LPALST+6(2),SYSNAME
          LA  2,9(2)     POINT TO NEXT PARM
          ST  2,NEXTCONA    SAVE ADDR
          LM   14,12,RTNSAVE+12
          BR   14
SP1PARM   DS   0H
          MVC LPALST+6(2),SYSPARM
          LA  2,9(2)     POINT TO NEXT PARM
          ST  2,NEXTCONA    SAVE ADDR
          LM   14,12,RTNSAVE+12
          BR   14
**********************************
LPELIM    DS    0H    FIND DELIMITER IN DSNAME
          STM  14,12,RTNSAVE+12
          L    3,LASTLPA
          MVC LPAOFF(44,3),=44C' '
          LA   15,0(2)
          L    14,=A(DELIMTAB)
          TRT  0(44,15),0(14)
          SR   1,15
          LTR  1,1
          BZ   *+6
          BCTR  1,0
          EX   1,MOVELPAN
          MVC  LPADSN,VOFF(3) SAVE DSNAME
          MVC  0(LPLCONSL,3),LPLCONS
***SEE IF ANY SUBSTITUTABLES IN DSN
          LA   15,LPADSN
SCAMP     SCANARG '&&SYS',ADDR=0(15),LEN=32
          BNZ  DOSUBAMP
***ADJUST LEN FIELD GENERATED IN MACRO BECAUSE OF &&
***GENERATED LEN CODE WAS 4 AND NEEDS TO BE 3.. ONLY TEST FOR &SYS
           ORG  SCAMPARGS
           DC  X'D503'
           ORG
          LM   14,12,RTNSAVE+12
          BR   14
DOSUBAMP   DS  0H R1 HAS ADDRESS OF &SYS; R15=LPADSN
          MVC   WORKDSN,=44C' '
          LR   14,1
          SR  14,15   OFFSET TO &SYS
          BCTR 14,0
          EX   14,MOVEWORK
          LA   2,WORKDSN+1
          AR   2,14   POINT TO SUBSTITUTABLE AREA
          MVC  LEN,=AL2(L'SYSNAME)
          CLC 1(7,1),=CL7'SYSNAME'
          BNE *+14
          MVC  0(L'SYSNAME,2),SYSNAME
          B   COSUBAMP
          MVC  LEN,=AL2(L'SYSPARM)
          CLC 1(7,1),=CL7'SYSPARM'
          BNE *+14
          MVC  0(L'SYSPARM,2),SYSPARM
          B   COSUBAMP
          MVC  LEN,=AL2(L'SYSCLONE)
          CLC 1(7,1),=CL7'SYSCLON'
          BNE *+14
          MVC  0(L'SYSCLONE,2),SYSCLONE
          B   COSUBAMP
          B  OUSUBAMP
**************************
COSUBAMP   DS   0H
          AH   2,LEN    POINT PAST SUBSTITUTED AREA
          LA   15,LPADSN
PPAMP     SCANARG '..',ADDR=0(15),LEN=42
          BZ   OUSUBAMP
          LA   14,LPADSN+L'LPADSN    END OF FIELD
          SR  14,1                   LENGTH OF LAST PART OF DSN
           BCTR 14,0
           AR 15,14        AREA TO MOVE  PAST .
           BCTR 14,0      FOR LENGTH CODE
           EX  14,MOVELAST
          MVC  LPADSN,WORKDSN
          L   3,LASTLPA
          MVC LPAOFF(L'WORKDSN,3),WORKDSN
OUSUBAMP   DS  0H
          LM   14,12,RTNSAVE+12
          BR   14
MOVELOAD  MVC LOADMEMB(0),2(1)
MOVELPAN  MVC VOFF(0,3),0(15)
MOVEWORK  MVC WORKDSN(0),LPADSN
MOVELAST  MVC 0(0,2),1(1)
***********************************
LPLCONS   DS  0H
         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DC    AL2(44)   LENGTH OF PARM
LPLCONSL EQU  *-LPLCONS
**********************************
PARMLIB DCB DSORG=PO,MACRF=(R),DDNAME=PARMLIB
LPALIBN DCB DSORG=PO,MACRF=(R),DDNAME=LPALIBN
******TO ALLOC SYS1.PARMLIB
         DS  0F
PTPOINT  DC   A(PBS)  ADR  REQ BLOCK PASSED IN R1
         ORG   PTPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
         DS    0F
PBS     DS   0F
         DS    0CL20  S99RB DSECT  LOC BY SBPOINT
         DC    AL1(PBEL)  LEN OF RB
         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC
         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
         DS    X       2ND   FLAG BYTE
         DS    XL2     ERROR REASON CODE
         DS    XL2     INFO  REASON CODE
ALCPOINT DC    A(PXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
         DS    XL4     FLAGS FOR AUTH FUNCTIONS
PBEL     EQU   *-PBS
* TEXT POINTERS  FOR ALLOCATION
PXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
PDNPOINT DC   A(PDNTEXT)    DDN TU
PSNPOINT DC   A(PSNTEXT)    DSN TU
PSPPOINT DC   A(PSSPTEXN)   DISP TU
         ORG  PSPPOINT    FOR LAST TU
         DC   X'80'
         ORG
PMPOINTS DS   0F     ALLOCATE WITH MEMBER NAME
         DC   A(PDNTEXTS)   DDN TU
         DC   A(PSNTEXT)    DSN TU
         DC   A(PSSPTEXN)   DISP TU
PSMPOINT DC   A(PSMTEXT)    MEMBER TU
         ORG  PSMPOINT    FOR LAST TU
         DC   X'80'
         ORG
**DDN TEXT UNIT
PDNTEXTS DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(8)           LENGTH OF PARM
PDNPARML DC    CL8'PARMLIBS'  DDNAME
***************
PDNTEXT  DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(8)           LENGTH OF PARM
PARMDDN  DC    CL8'PARMLIB'  DDNAME
**DSN  TEXT UNIT
PSNTEXT  DS    0F   DSN TEXT UNIT
         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(44)  LENGTH OF PARM
PSNDSN   DC    CL44'SYS1.PARMLIB'   DSNAME
**MEMBERNAME TEXT UNIT
PSMTEXT  DS    0F   DSN TEXT UNIT
         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(8)   LENGTH OF PARM
PSMMEMB  DC    CL8'LOAD    '     MEMBERNAME
**DISP TEXT UNIT
PSSPTEXN  DS    0F   DSP TEXT UNIT
         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION
          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
          DC    AL2(1)  LENGTH OF PARM
         DC    X'08'  DISP=SHR
***FOR DEALLOCATION
PDPOINT  DC   A(PDBSD) ADR  REQ BLOCK PASSED IN R1
         ORG   PDPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
PDBSD    DS   0F
          DS    0CL20  S99RB DSECT  LOC BY SBPOINT
          DC    AL1(NDBELD)  LEN OF RB
          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC
          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
          DS    X       2ND   FLAG BYTE
          DS    XL2     ERROR REASON CODE
          DS    XL2     INFO  REASON CODE
          DC    A(PDXPOIND)     LIST OF TEXT PTRS
         DS    F       RESERVED
         DS    XL4     FLAGS FOR AUTH FUNCTIONS
* TEXT POINTERS  FOR DEALLOCATION
PDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST
         DC   A(PNDNTEXD)  DDN TU
         ORG PDXPOIND    FOR LAST TU
         DC  X'80'
         ORG
**DDN TEXT UNIT FOR DEALLOC
PNDNTEXD DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(8)  LENGTH OF PARM
PEALCDDN DC    CL8'PARMLIB'  DDNAME
**********TO ALLOCATE LPA  DSNS
LTPOINT  DC   A(LPS) ADR  REQ BLOCK PASSED IN R1
         ORG   LTPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
LPS     DS   0F
         DS    0CL20  S99RB DSECT  LOC BY SBPOINT
         DC    AL1(VBEL)  LEN OF RB
         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC
         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
         DS    X       2ND   FLAG BYTE
         DS    XL2     ERROR REASON CODE
         DS    XL2     INFO  REASON CODE
         DC    A(LPPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
         DS    XL4     FLAGS FOR AUTH FUNCTIONS
* TEXT POINTERS  FOR ALLOCATION  OF LPA  LIBS
LPPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
         DC   A(LPDNAME)    DDN TU
LPSNAMEA DS   A             DSN TU
LPPPOINT DC   A(PSSPTEXN)   DISP TU
         ORG  LPPPOINT    FOR LAST TU
         DC   X'80'
         ORG
**DDN TEXT UNIT
LPDNAME  DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'NDNTXPRM)  LENGTH OF PARM
LPDPARM  DC    CL8'LPALIBN'  DDNAME
******FOR TSO**************
*READAREA DS   F
*RECADDR  DS   F
*ENDBLOCK DS   F
*LASTBLOC DS   F
*DSERVOUT DS   F
*DSERVLEN DS   F
*NUMMEMBS DS   F
*CURMEMBS DS   F
*LEN      DS  H
*BLKSIZE  DS  H
*LRECL    DS  H
*LOADMEMB DS  CL8
*IEASYS   DS  CL8
*LPALST   DS  CL8
*SYSNAME  DS  CL4
*SYSCLONE DS  CL2
*SYSPARM  DS  CL2
*LPACONST DS  CL20
*ERRSW    DS  X
*****************
          LTORG
          DROP  LINKREG
          EJECT
***************************************
SRCHJES2  DS   0H   SEARCH SYS1.PROCLIB(JES2) FOR PROCLIB DSNS
          USING *,LINKREG
          STM   14,12,SAVELINK+12
          XC    NUMPLIBS,NUMPLIBS
          MVC   JDNTXPRM,=CL8'JESPROC'
          MVC   JSNPOINT,=A(JSNTEXT)
          LA   1,JTPOINT       ALLOC PROCLIB
          DYNALLOC
          CH   15,=H'4'
          BH   ENDPROCK
*****READ JES2 MEMBER AND GET DSNS OF PROCLIBS
          ST   13,MVSSAVE
          LA   13,MVSSAVE
          OPEN (JESPROC,(INPUT))
          LTR  15,15
          BNZ  ENDPROCK
JEXTPR     DS   0H
          GET JESPROC
          CLC  0(6,1),=CL6'//PROC'
          BE   GOTJPROC
          B    JEXTPR
GOTJPROD  DS   0H
          LA   3,L'PROCLIBS(3)
          B    *+8
GOTJPROC  DS   0H
          LA   3,PROCLIBS
          LR   2,1
GTJ       SCANARG 'DSN=',ADDR=14(2),LEN=20
          BZ   ENDPROCJ
          BAL  14,JDELIM
JONTVLST   DS   0H
          LA   3,L'PROCLIBS(3)   NEXT ENTRY
          LH   0,NUMPLIBS
          AH   0,=H'1'
          STH  0,NUMPLIBS
          CH   0,=AL2(NUMPLIBN)
          BH   ENDPROCJ    MAX OF 30 DSNAMES
JETVLST   DS   0H
          GET  JESPROC
          CLI  2(1),C'*'   COMMENT?
          BE   JETVLST
          CLI  2(1),C' '   CONCATENATION?
          BNE  JREVLIB     SEE IF //PROCNN
          LR   2,1
JC1       SCANARG 'DSN=',ADDR=14(2),LEN=20
          BZ   ENDPROCJ
          BAL  14,JDELIM
          B    JONTVLST
JREVLIB   DS   0H
          CLC  0(6,1),=CL6'//PROC'
          BE   GOTJPROD
          B   ENDPROCJ
ENDPROCJ  DS   0H
          CLOSE JESPROC
ENDPROCK  DS    0H
*****DEALLOCATE PROCLIB
          MVC  JEALCDDN,=CL8'JESPROC'
          MVC  JDMEMBER,=CL8'JES2'
*         NI   JDDNPOID,255-X'80'  SET OFF LAST TU ON DDN
*         OI   JDDMPOID,X'80'  SET ON  LAST TU ON MEMBER
          LA   1,JTPOINTD      DEALLOC PROCLIB
*         NI   JDDMPOID,255-X'80'  SET OFF LAST TU ON MEMBER
*         OI   JDDNPOID,X'80'  SET ON  LAST TU ON DDN
          DYNALLOC
*******ALLOCATE PROCLIB LIBS
          LA  1,PROCLIBS
          MVC  WORKDSN,POFF(1)
          ST  1,JSNPOINT
*         MVC  JDNTXPRM,=CL8'SYSPROC'
          MVC  JDNTXPRM,=CL8'PROCXXX'
          OI   JSPPOINT,X'80'  SET LAST TU - NO MEMBER NAME
          LA   1,JTPOINT       ALLOCATE PROCLIB
          DYNALLOC
          MVC  JSNPOINT,=A(JSNTEXT)  RESET
          NI   JSPPOINT,255-X'80'  RESET
          LTR  15,15
          BNZ  JEALVLST
*********OPEN AND ISSUE BLDL FOR EACH LIB IN CONCAT**********
*         OPEN (SYSPROC,(INPUT))
          OPEN (PROCXXX,(INPUT))
          LTR  15,15
          BNZ   JEALVLST
*****BLDL SYSPROC
*         LA  DCBREG,SYSPROC
          LA  DCBREG,PROCXXX
          MVC BLDLNUM,=H'1'  1 ENTRY
          MVC  BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
          MVC  BLDLNAME,WORKPROG
          LR   2,DCBREG
          LA   0,BLDLLIST
          BLDL  (2),(0)
           LTR 15,15
          BNZ  JEALVLST
           OI  WORKSW2,LOADPROC
JEALVLST   DS   0H
***        CLOSE  SYSPROC
           CLOSE  PROCXXX
*         MVC  JEALCDDN,=CL8'SYSPROC'
          MVC  JEALCDDN,=CL8'PROCXXX'
          LA   1,JTPOINTD      DEALLOC PROCLIB
          DYNALLOC
            TM  WORKSW2,LOADPROC
            BO ENDVLSTJ
            B  JEXTVLSA  SEARCH OTHER LIBS IN CONCAT
*************************************************************
JEXTVLSA  DS    0H
          LH   1,NUMPLIBS
          LTR  1,1
          BZ   ENDVLSTJ
          STH  1,CURNUM
          LA   1,PROCLIBS+L'PROCLIBS
          ST   1,CURPLST
******ALLOCATE ADDITONAL VTAMLST, OPEN AND BLDL   **************
JDDVLSTP  DS   0H
          ST   1,JSNPOINT
          MVC  WORKDSN,POFF(1)
          MVC  JDNTXPRM,=CL8'PROCXXX'
          OI   JSPPOINT,X'80'  NO MEMBER NAME
          LA   1,JTPOINT       ALLOCATE PROCXXX
          DYNALLOC
          NI   JSPPOINT,255-X'80'
          MVC  JDNTXPRM,=CL8'JESPROC' RESET
          LTR  15,15
          BNZ  JEALVXXX
          OPEN (PROCXXX,(INPUT))
          LTR  15,15
          BNZ   JEALVXXX
          LA  DCBREG,PROCXXX
          LA   0,BLDLLIST
          BLDL  (DCBREG),(0)
           LTR 15,15
          BNZ  JEALVXXX
           OI  WORKSW2,LOADPROC
            B  JEALVXXX
JEALVXXX   DS   0H
           CLOSE PROCXXX
*****DEALLOCATE PROCXXX
          MVC  JEALCDDN,=CL8'PROCXXX'
          LA   1,JTPOINTD      DEALLOC PROCXXX
          DYNALLOC
          MVC  JEALCDDN,=CL8'JESPROC'  RESET
          TM  WORKSW2,LOADPROC
          BO  ENDVLSTJ
          B  JEXTVLSB
JEXTVLSB   DS   0H
          LH   1,CURNUM
          BCTR 1,0
          LTR  1,1
          BZ  ENDVLSTJ
          STH  1,CURNUM
          L    1,CURPLST
          LA   1,L'PROCLIBS(1)
          ST   1,CURPLST
          B    JDDVLSTP
ENDVLSTJ DS   0H
          LM  14,12,SAVELINK+12
          L    13,MVSSAVE
          BR   RET
JDELIM    DS    0H    FIND DELIMITER IN DSNAME
          STM  14,12,RTNSAVE+12
          MVC POFF(44,3),=44C' '
          LA   15,4(1)
          L    14,=A(DELIMTAB)
          TRT  0(44,15),0(14)
          SR   1,15
          LTR  1,1
          BZ   *+6
          BCTR  1,0
          EX   1,MOVEJTN
          MVC  0(JALCONSL,3),JALCONS
          LM   14,12,RTNSAVE+12
          BR   14
MOVEJTN   MVC POFF(0,3),0(15)
JALCONS   DS  0H
         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DC    AL2(44)   LENGTH OF PARM
JALCONSL EQU  *-JALCONS
JESPROC DCB DSORG=PS,MACRF=GL,DDNAME=JESPROC,EODAD=ENDPROCJ
PROCXXX DCB DSORG=PO,MACRF=(R),DDNAME=PROCXXX
         DS  0D
FILL    DC   CL8'JTPOINT'
******TO ALLOC SYS1.PROCLIB
         DS  0D
JTPOINT  DC   A(JBS)  ADR  REQ BLOCK PASSED IN R1
         ORG   JTPOINT   S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
         DS    0F
JBS     DS   0F
         DS    0CL20  S99RB DSECT  LOC BY SBPOINT
         DC    AL1(JBEL)  LEN OF RB
         DC    AL1(S99VRBAL)         FUNC 01-07 01 FOR ALLOC
         DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
         DS    X       2ND   FLAG BYTE
         DS    XL2     ERROR REASON CODE
         DS    XL2     INFO  REASON CODE
JBTXTPP  DC    A(JXPOINTS)     LIST OF TEXT PTRS
         DS    F       RESERVED
         DS    XL4     FLAGS FOR AUTH FUNCTIONS
JBEL     EQU   *-JBS
* TEXT POINTERS  FOR ALLOCATION
JXPOINTS DS    0F      S99TUPL  DSECT  TU PTR LIST
JDNPOINT DC   A(JDNTEXT)    DDN TU
JSNPOINT DC   A(JSNTEXT)    DSN TU
JSPPOINT DC   A(JSSPTEXN)   DISP TU
JSMPOINT DC   A(JSMTEXT)    MEMBER TU
         ORG  JSMPOINT    FOR LAST TU
         DC   X'80'
         ORG
JDNTEXT  DS    0F   S99TUNIT DSECT  TEXT UNITS
**DDN TEXT UNIT
         DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM
JDNTXPRM DC    CL8'JESPROC'  DDNAME
**DSN  TEXT UNIT
JSNTEXT  DS    0F   DSN TEXT UNIT
         DC    AL2(DALDSNAM)  KEY FOR DSN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'JSNTXPRM)   LENGTH OF PARM
JSNTXPRM DC    CL44'SYS1.PROCLIB'   DSNAME
**MEMBERNAME TEXT UNIT
JSMTEXT  DS    0F   DSN TEXT UNIT
         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'JSMTXPRM)   LENGTH OF PARM
JSMTXPRM DC    CL8'JES2    '     MEMBERNAME
**DISP TEXT UNIT
JSSPTEXN  DS    0F   DSP TEXT UNIT
JISPTEXT  EQU   *
         DC    AL2(DALSTATS)  KEY FOR  DISPOSITION
          DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
          DC    AL2(L'JSSPTXPR)  LENGTH OF PARM
JSSPTXPR DC    X'08'  DISP=SHR
***FOR DEALLOCATION
          DS   0D
JTPOINTD DC   A(JBSD) ADR  REQ BLOCK PASSED IN R1
         ORG   JTPOINTD  S99RBP  DSECT
         DC    X'80'   HI ORDER BIT MUST BE ON
         ORG
JBSD    DS   0F
         DS    0CL20  S99RB DSECT  LOC BY SBPOINT
          DC    AL1(JDBELD)  LEN OF RB
          DC    AL1(S99VRBUN)         FUNC 01-07 01 FOR DEALLOC
          DC    AL1(S99NOMNT) FLAG BYTE-DONT CONSIDER OFFLINE UNITS
          DS    X       2ND   FLAG BYTE
          DS    XL2     ERROR REASON CODE
          DS    XL2     INFO  REASON CODE
          DC    A(JDXPOIND)     LIST OF TEXT PTRS
         DS    F       RESERVED
         DS    XL4     FLAGS FOR AUTH FUNCTIONS
JDBELD     EQU   *-JBSD
* TEXT POINTERS  FOR DEALLOCATION
JDXPOIND DS    0F      S99TUPL  DSECT  TU PTR LIST
JDDNPOID DC   A(JNDNTEXD)  DDN TU
         ORG JDDNPOID   FOR LAST TU
         DC  X'80'
         ORG
JDDSPOID DC  A(JSNTEXT)  DSN    TU
JDDMPOID DC  A(JDDMTEXD) MEMBER TU
         ORG
**DDN TEXT UNIT FOR DEALLOC
JNDNTEXD DS    0F   DDN TEXT UNIT
         DC    AL2(DALDDNAM)  KEY FOR DDN TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'JDNTXPRM)  LENGTH OF PARM
JEALCDDN DC    CL8'JESPROC'  DDNAME
JDDMTEXD DS    0F   DDN TEXT UNIT
         DC    AL2(DALMEMBR)  KEY FOR MEMBER TEXT
         DC    XL2'0001'   NUM LENGTH + PARM ENTRIES
         DS    0C
         DC    AL2(L'JDMEMBER)  LENGTH OF PARM
JDMEMBER DC    CL8'JES2'  MEMBER NAME
          LTORG
          DROP  LINKREG
          EJECT
***************************************
TRTAB    DS   0C
        USING *,1
      DC   256AL1(*-TRTAB)
         ORG  TRTAB
          DC  X'40'
          ORG
          LTORG
          DROP  1
TRANTAB DS   0C
        USING *,1
      DC   256AL1(*-TRTAB)
         ORG  TRANTAB
          DC  X'40'
         ORG  TRANTAB+C','
          DC  X'40'
          ORG
          LTORG
          DROP  1
SBATAB   DS   0C
         USING *,1
          SBA  3,1
          SBA  4,1
          SBA  5,1
          SBA  6,1
          SBA  7,1
          SBA  8,1
          SBA  9,1
          LTORG
          DROP  1
DELIMTAB DS   0C
         USING *,1
         DC   256X'00'
          ORG  DELIMTAB
          DC   X'FF'
          ORG  DELIMTAB+C' '
          DC   X'FF'
          ORG  DELIMTAB+C','
          DC   X'FF'
          ORG
          LTORG
          DROP  1
ALPHTAB DS   0C
         USING *,1
         DC   256X'00'
          ORG  ALPHTAB+X'C1'
          DC  9X'FF'
          ORG  ALPHTAB+X'D1'
          DC  9X'FF'
          ORG  ALPHTAB+X'E2'
          DC  8X'FF'
          ORG
          LTORG
          DROP  1
         END                                                            COP00620
/*
//*2  EXEC DFH4LNK4,MOD=WMOD,LNKLIB='XCICS.CICS410.TEST',AMODE=24,
//* RMODE=24
//*2  EXEC DFH2LNKC,MOD=WMOD,LNKLIB='XCICS.CICS212.TEST',
//* COND=(4,LT,STP1.ASM)
//S2  EXEC DFH5LNK5,MOD=WMOD,LNKLIB='XCICS.CICS530.TEST',
//  AMODE=24,RMODE=24
//
