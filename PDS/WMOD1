*****W M O D******TSO VERSION*************************
****FORMAT: WMOD MODNAME
**  RUNTIME INSTRUCTIONS
**PLACE PROGRAM IN LINKLIST OR INVOKE THRU CALL STATEMENT IN A CLIST.
**  ASSEMBLY INSTRUCTIONS
**    NOTHING SPECIAL
*********************************
**THIS PROGRAM WILL SEARCH ALL ALLOCATED PDS LIBRARIES IN THE TSO
**ADDRESS SPACE FOR THE SPECIFIED MODULE NAME, INCLUDING CLISTS,
**SOURCE, ISPF LIBRARIES, ETC. IT WILL ALSO SEARCH STEPLIB, LPA,
**LINKLIST AND SVCLIB. FOR LPA MODULES, THE ADDRESS IN LPA WILL
**BE RETURNED. FOR ALL OTHERS, THE DATASET NAME WILL BE RETURNED.
*******************************************************
LINKREG  EQU   8
RET      EQU   10
CVTREG   EQU   1
LPDEREG  EQU   2
DCBREG   EQU   2
DEBREG   EQU   3
LLTREG   EQU   3
TIOTREG  EQU   4
ARLREG   EQU   4
BASEREG  EQU   11
JSCBREG  EQU   15
JFCBREG  EQU   15
TCBREG   EQU   5
         IEFZB4D0
         IEFZB4D2
ARL      IHAARL DSECT=YES,PREFIX=ARL,DESCR=YES
ARLENGTH EQU   *-ARL
         DCBD  DSORG=PO
DCBLEN   EQU   *-IHADCB
TIOT     DSECT
         IEFTIOT1
TIOTOFF  EQU   TIOENTRY-TIOT
XIOT     DSECT
         ORG   XIOT+TIOELNGH-TIOENTRY
XIOELNGH DS    XL(L'TIOELNGH)
         ORG   XIOT+TIOEDDNM-TIOENTRY
XIOEDDNM DS    CL(L'TIOEDDNM)
         ORG   XIOT+TIOEJFCB-TIOENTRY
XIOEJFCB DS    XL(L'TIOEJFCB)
JFCB     DSECT
         IEFJFCBN LIST=YES
DEBBASIC IGGDEBD
         IKJTCB LIST=YES,DSECT=YES
         IEZJSCB
ARAD     DSECT
ARALEN   DS    H LEN OF INFO INCLUDING LLBB. LEN ROUNDED UP TO 4
***SO STARTING ADR OF ARA + LLBB = A(NEXTARA)
         DS    XL2  RESERVED
ARAJFCB  DS    CL176   JFCB
ARAVOL   DS    0C   6TH AND SUBSEQUENT VOLSERS DETERMINED BY JFCBNVOL
         CVT   DSECT=YES,LIST=YES
         IHALPDE
LPDELEN  EQU   *-LPDE
LLTE     DSECT
         DS    X
LLTDSN   DS    CL44
LLTLEN   EQU   *-LLTE
LLTOFF   EQU   8    OFFSET TO FIRST LLTE
PRVENTRY DS    CL8    FOR EACH ENTRY
*********************************************************************** COP00210
*********************************************************************** COP00250
* NAME: WMOD                                                            COP00290
* FUNCTION: DISPLAYS WHICH RPL LOADLIB A PROGRAM HAS BEEN LOADED FROM   COP00310
*                                                                       COP00420
**********************************************************************  COP00430
WMOD     CSECT                                                          COP00440
WMOD     AMODE 31                                                       COP00440
WMOD     RMODE 24                                                       COP00440
         USING WMOD,BASEREG
         B     BEGIN-*(,15)
         DC    AL1((BEGIN-*)-1)
         DC    C'SEEK '
         DC    CL9'&SYSDATC'
         DC    CL5'&SYSTIME'
BEGIN    STM   14,12,12(13)
         LR    BASEREG,15
         LR    14,13
         LA    13,SAVEMAC
         ST    14,4(,13)
         ST    13,8(,14)
*        ST    1,SAVER1
***      OPEN  (SNAP,OUTPUT)
****     L     1,SAVER1
****     MVC   SNAPPARM,0(1)
****     SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=01
         CLI   0(1),X'80'    ONLY PARM
         BNE   NOTONE
         L     1,0(,1)             ADDRESS OF PARM LIST
*        ST    1,SAVER1
****     MVC   SNAPPARM,0(1)
******   SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=02
****     L     1,SAVER1
         LH    2,0(,1)             LENGHT OF PARM FIELD
         LTR   2,2
         BZ    ENDIT
         BCTR  2,0
         LA    1,2(,1)
         EX    2,MOVEPROG
         B     GOTIT
NOTONE   DS    0H
         L     1,0(,1)             ADDRESS OF PARM LIST
*        ST    1,SAVER1
****     MVC   SNAPPARM,0(1)
*****    SNAP  DCB=SNAP,STORAGE=(SNAPPARM,SNAPPARM+39),ID=03
****     L     1,SAVER1
         LR    15,1                SAVE IT
         LH    2,2(,1)             LEN   OF FIRST PARM
         LR    0,2                 SAVE LEN
         LA    1,4(,1)             ADDR 1ST PARM
         AR    2,1                 END OF FIRST PARM
         CLI   0(2),C'$'           REALLY A 2ND PARM
         BL    ISONE               NO...
         LH    0,0(,15)            LEN OF TOTAL PARM AREA
         LH    15,2(,15)           LEN OF FIRST PARM
         SR    0,15                LEN OF 2ND PARM
         SH    0,=H'4'             - LEN
         LR    1,2                 ADDR 2ND PARM
         LR    2,0                 LEN 2ND PARM
         BCTR  2,0
         EX    2,MOVEPROG
         B     GOTIT
MOVEPROG MVC   WORKPROG(0),0(1)
ISONE    DS    0H
         LR    15,0                LEN  OF PARM
         BCTR  15,0
         EX    15,MOVEPROG
         B     GOTIT
GOTIT    DS    0H
         BAL   RET,ALLOCOUT
         OPEN  (OUTFILE,(OUTPUT))
         XR    5,5                 CLEAR REG 5                          COP00490
         OC    WORKPROG,BLANKS     FOLD LOWER TO UPPER CASE
*****CHECK IF MODULE IN LINKLIB, JOB/STEPLIB OR LPA
         BAL   RET,CHKSLIB
         TM    WORKSW,LOADSTEP
         BNO   TESTSVC             IS IN STEPLIB/JOBLIB
         XC    WORKDSN,WORKDSN
         MVC   BLDLCCAT,STEPCCAT
         MVC   WORKDDN,=CL8'STEPLIB'
         BAL   RET,RDJFCB
         CLI   WORKDSN,X'00'
         BE    TESTSVC
         BAL   LINKREG,PUTOUT
TESTSVC  DS    0H
         TM    WORKSW,LOADSVC
         BNO   TESTLINK            CHECK LINKLIST
         MVC   WORKDSN,SVCDSN
         MVC   WORKDDN,=CL8'SVCLIB'
         BAL   LINKREG,PUTOUT
TESTLINK DS    0H
         TM    WORKSW,LOADLINK
         BNO   TESTLPA
         XC    WORKDDN,WORKDDN
         XC    WORKDSN,WORKDSN
         MVC   BLDLCCAT,LINKCCAT
         BAL   RET,SRCHLINK
         MVC   WORKDDN,DLCBNAME
         BAL   LINKREG,PUTOUT
TESTLPA  DS    0H                  CHECK IF MODULE IN LPA
         MVC   WORKDDN,=CL8'LPALIB'
         BAL   RET,SRCHLPA
         TM    WORKSW,LOADLPA
         BNO   TESTDDNS
         XC    WORKDSN,WORKDSN
         BAL   LINKREG,PUTOUT
TESTDDNS DS    0H
***GET DDN OF ALL PDS'S ALLOCATED TO REGION
         BAL   RET,LOCDEBS
         LA    1,DDNTAB
TESTDDNT DS    0H
         CLI   0(1),X'FF'
         BE    WHERLOAD
         ST    1,CURDDN
         B     DODDNST
NEXTDDNT DS    0H
         L     1,CURDDN
         LA    1,TABL(,1)
         B     TESTDDNT
DODDNST  DS    0H
****LOCATE DCB FOR EACH DDN IS TABLE AND ISSUE BLDL FOR MODULE
         BAL   RET,SRCHSDEB
         TM    TSOSW,TSOFILE
         BO    DOTSODD             PROGRAM FOUND
         B     NEXTDDNT
         CLI   FOUNDSW,X'FF'
         BE    RETURN
         BAL   RET,FINDDCB
         TM    TSOSW,TSOFILE
         BNO   WHERLOAD            PROGRAM NOT DDN
DOTSODD  DS    0H
****READ JFCBS FOR DDN     AND EXTRACT DSN IN CONCATENATION****
         BAL   RET,RDJFCB
         CLI   WORKDSN,X'00'
         BE    WHERLOAD
         BAL   LINKREG,PUTOUT
         B     NEXTDDNT
NOPROG   DS    0H
         XC    OUTCON,OUTCON
         MVC   ERRPROG,WORKPROG
         MVC   OUTCON(ERRMESSL),ERRMESS
         BAL   LINKREG,DOSEND
         B     RETURN
WHERLOAD DS    0H
         CLI   FOUNDSW,X'FF'
         BNE   NOPROG
         B     RETURN
PUTOUT   DS    0H
         MVI   FOUNDSW,X'FF'
         MVC   MODCON,=CL6'LOAD  '
         TM    TSOSW,SRCMOD
         BNO   *+10
         MVC   MODCON,=CL6'SOURCE'
         MVC   PROGCON,WORKPROG
         MVC   DDNCON,WORKDDN
         CLI   WORKDSN,X'00'
         BE    *+14
         MVC   DSNCON,WORKDSN
         B     DOSEND
         MVC   DSNCON(4),=CL4'AT  '
         MVC   DSNCON+4(L'WORKCDDR),WORKCDDR
DOSEND   DS    0H
         MVI   FOUNDSW,X'FF'
         PUT   OUTFILE,OUTCON
         BR    LINKREG
RETURN   DS    0H
         CLOSE OUTFILE
ENDIT    DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         SLR   15,15
         BR    14
ERRMESS  DS    0C
         DC    CL4' '
ERRPROG  DS    CL8
         DC    C' NOT FOUND        '
ERRMESSL EQU   *-ERRMESS
BLANKS   DC    8C' '
DLCBNAME DC    CL8' '
WORKDSN  DS    CL44
SVCDSN   DC    CL(L'WORKDSN)'SYS1.SVCLIB'
WORKPROG DS    CL8
WORKDDN  DS    CL8
WORKPARM DS    CL16
*NAPPARM DS    CL40
TSOSW    DS    X
TSOFILE  EQU   X'01'
SRCMOD   EQU   X'80'
WORKSW   DS    X
NOLPA    EQU   X'01'
NOPPT    EQU   X'02'
FOUND    EQU   X'04'
LOADSVC  EQU   X'08'
LOADLPA  EQU   X'10'
LOADSTEP EQU   X'20'
LOADLINK EQU   X'40'
LOADRPL  EQU   X'80'
FOUNDSW  DS    X
TCBADDR  DS    F
TIOTADDR DS    F
DEBADDR  DS    F
DCBADDR  DS    F
BEGTIOT  DS    F
CURDDN   DS    F
SAVEMAC  DS    18F
SAVELINK DS    18F
SAVER1   DS    F
ENDDEBQ  DS    F
DEBQADDR DS    F
WORKCDDR DS    CL8,C' '
FINOUT   DS    0C
         DC    C' MODULE LOADED FROM '
FINLIB   DS    CL8
FINL     EQU   *-FINOUT
BLDLLIST DS    0H
BLDLNUM  DS    H   NUMBER OF ENTRIES
BLDLLEN  DS    H   LEN OF EACH ENTRY
BLDENTRY EQU   *
BLDLNAME DS    CL8
BLDLTTR  DS    XL3
BLDLCCAT DS    X   CONCAT NUMBER RETURNED BY BLDL
BLDLZ    DS    X   WHERE ENTRY FOUND
         DS    X
BLDLELEN EQU   *-BLDENTRY  LEN OF EACH ENTRY
LINKCCAT DS    X
STEPCCAT DS    X
OUTFILE  DCB   DDNAME=CERMFILE,MACRF=PM,DSORG=PS,RECFM=FA,             X
               LRECL=80,BLKSIZE=80
OUTCON   DS    0CL80
         DC    CL1' '               1
MODCON   DC    CL6' '          + 6= 7
         DC    C' MODULE '     + 8=15
PROGCON  DS    CL8             + 8=23
         DC    C' IS IN DDN '  +11=34
DDNCON   DS    CL8             + 8=42
         DC    C' '            + 1=43
DSNCON   DS    CL37            +37=80
         DS    0F
WARLAREA DS    CL(ARLENGTH)
WXJFCB   DS    0F                                                       JFC00600
         DC    X'93',AL3(WARLAREA) ONLY ENTRY                           JFC00610
WDCB     DCB   DDNAME=ISPPROF,EXLST=WXJFCB,MACRF=(E)                           J
*NAP DCB  DDNAME=SNAP,DSORG=PS,MACRF=W,LRECL=125,RECFM=VBA,BLKSIZE=882
         LTORG
         TITLE '                                             READ JFCB'
RDJFCB   DS    0H
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         XC    WORKDSN,WORKDSN
         MVC   WARLAREA(ARLENGTH),CRL MOVE TO DYNAMIC STORAGE
         LA    ARLREG,WARLAREA
         USING ARL,ARLREG
         MVC   ARLRETRV,=H'1'      ONLY WANT INFO FOR 1 DATASET
         SR    0,0
         IC    0,BLDLCCAT          RELATIVE CONCAT NUMBER
         AH    0,=H'1'             ACTUAL CONCAT NUMBER
         STH   0,ARLFIRST          DS WITH THIS CONCAT NUMBER
         DROP  ARLREG
         MVC   WDCB+DCBDDNAM-IHADCB(8),WORKDDN
         RDJFCB WDCB                                                     JFC0042
         LTR   15,15
         BNZ   ENDJFCB
PROCJFCB DS    0H                 FIND JFCB FOR CONCAT NUMBER FROM BLDL
         LA    ARLREG,WARLAREA
         USING ARL,ARLREG
         L     1,ARLAREA           RESPONSE FROM RDJFCB
         USING ARAD,1
         LA    JFCBREG,ARAJFCB
         DROP  1
         USING JFCB,JFCBREG
         MVC   WORKDSN,JFCBDSNM    SAVE DSNAME
FREEJFCB DS    0H   FREE ARA
****ISSUE FREEMAIN FOR STORAGE AREAS*****
         SR    2,2
         IC    2,ARLPOOL           SUBPOOL
         L     3,ARLAREA           ADDR OF ARA
         SR    0,0
         ICM   0,7,ARLRLEN
         DROP  ARLREG
         FREEMAIN RU,LV=(0),SP=(2),A=(3)
ENDJFCB  DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         BR    RET
***ALLOCATION RETRIEVAL LIST
CRL      IHAARL DSECT=NO,PREFIX=CRL,DESCR=NO
*        DROP  LINKREG
         LTORG
         EJECT
FINDDCB  DS    0H
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         NI    TSOSW,255-TSOFILE
         L     1,16                CVT
         L     1,0(,1)             ADDR OF TCB POINTER
         L     1,4(,1)             ADDR TCB
         LR    TCBREG,1
         B     NEXTTCB2
         USING TCB,TCBREG
NEXTTCB  DS    0H
         L     TCBREG,TCBBACK      PREV TCB
NEXTTCB2 DS    0H
         LTR   TCBREG,TCBREG
         BZ    ENDFDCB
         CLC   TCBTCBID(3),=CL3'TCB'
         BNE   ENDFDCB
         ST    TCBREG,TCBADDR
**CHECK IF DFHSIP TCB
         L     JSCBREG,TCBJSCB
*        USING IEZJSCB,JSCBREG
*        CLC   JSCBPGMN,=CL8'DFHSIP'
*        DROP  JSCBREG
         L     TIOTREG,TCBTIO      TIOT
         ST    TIOTREG,TIOTADDR
         ST    TIOTREG,BEGTIOT
         L     DEBREG,TCBDEB       DEB QUEUE
         LTR   DEBREG,DEBREG
         BZ    NEXTTCB
         ST    DEBREG,DEBADDR
         DROP  TCBREG
         LA    TIOTREG,TIOTOFF(TIOTREG)  PTR TIOENTRY
         USING XIOT,TIOTREG
         SR    0,0
FINDTIOT DS    0H
         CLI   XIOELNGH,X'00'
         BE    NEXTTCB
         CLC   XIOEDDNM,WORKDDN
         BE    GOTPROF
         IC    0,XIOELNGH          LEN OF ENTRY
         AR    TIOTREG,0           NEXT ENTRY
         B     FINDTIOT
***LOCATE DDN     IN TIOT
GOTPROF  DS    0H
         ST    TIOTREG,TIOTADDR
****LOCATE DEB FOR DN     ****
****DCB ADDR IN DEB HAS OFFSET TIOT. FIND ADDRESS MATCHING TIOTADDR
         L    DEBREG,DEBADDR
         USING DEBBASIC,DEBREG
         B     FINDDEB
NEXTDEB  DS    0H
         CLC   DEBDEBAD+1(3),=XL3'000000'
         BE    NEXTTCB
         L     DEBREG,DEBDEBAD     NEXT DEB
FINDDEB  DS    0H
         CLC   DEBTCBAD+1(3),TCBADDR+1      VALID DEB  ?
         BNE   NEXTTCB
         L     DCBREG,DEBDCBAD     ADDR DCB
         USING IHADCB,DCBREG
         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?
         BNO   NEXTDEB             NO..NEXT DEB ENTRY
         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?
         BO    *+18                YES...
         CLC   WORKDDN,DCBDDNAM    SAME DD NAME
         BE    GOTDCB
         B     NEXTDEB
         LH    0,DCBTIOT           OFFSET IN TIOT FOR THIS DCB
         L     1,BEGTIOT           BEG OF TIOT
         AR    1,0                 TIOT ADDR FOR THIS ENTRY
         C     1,TIOTADDR          SAME AS FOR DDN
         BNE   NEXTDEB
GOTDCB   DS    0H
         ST    DCBREG,DCBADDR      DCB
         MVC   BLDLNUM,=H'1'  1 ENTRY
         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
         MVC   BLDLNAME,WORKPROG
         LR    2,DCBREG
         LA    0,BLDLLIST
         BLDL  (2),(0)
         LTR   15,15
         BNZ   ENDFDCB
         OI    TSOSW,TSOFILE
         TM    DCBRECFM,DCBRECU    UNDEFINED
         BO    ENDFDCB             ASSUME LOAD   MODULE
*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE
*        BNO   ENDFDCB             ASSUME SOURCE MODULE
         OI    TSOSW,SRCMOD
ENDFDCB  DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         BR    RET
         LTORG
*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG
         DROP  TIOTREG,DEBREG,DCBREG
         EJECT
SRCHSDEB DS    0H
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         NI    TSOSW,255-TSOFILE
         L     15,CURDDN
         USING TABSECT,15
         L     DEBREG,DDNDEB
         USING DEBBASIC,DEBREG
         SLR   DCBREG,DCBREG
         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB
         USING IHADCB,DCBREG
         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?
         BNO   ENDSJSCB            NO..RETURN
         MVC   WORKDDN,DDNDSNAM
         ST    DCBREG,DCBADDR      DCB
         MVC   BLDLNUM,=H'1'       1 ENTRY
         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
         MVC   BLDLNAME,WORKPROG
         LR    2,DCBREG
         LA    0,BLDLLIST
         BLDL  (2),(0)
         LTR   15,15
         BNZ   ENDSJSCB
         OI    TSOSW,TSOFILE
         NI    TSOSW,255-SRCMOD
         TM    DCBRECFM,DCBRECU    UNDEFINED
         BO    ENDSJSCB            ASSUME LOAD   MODULE
*        TM    DCBRECFM,DCBRECF    FIXED BLOCK FILE
*        BNO   ENDSJSCB            ASSUME SOURCE MODULE
         OI    TSOSW,SRCMOD
ENDSJSCB DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         BR    RET
         LTORG
*        DROP  LINKREG,15,DEBREG,DCBREG
         DROP  15,DEBREG,DCBREG
         EJECT
LOCDEBS  DS    0H     GET LIST OF DDNS
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         LA    1,DDNTAB
         ST    1,LASTTAB
         MVI   0(1),X'FF'
         MVI   TEMPSW,X'00'
         L     1,16                CVT
         L     1,0(,1)             ADDR OF TCB POINTER
         L     1,4(,1)             ADDR TCB
         LR    TCBREG,1
         USING TCB,TCBREG
         USING DEBBASIC,DEBREG
         L     TIOTREG,TCBTIO      TIOT
         ST    TIOTREG,TIOTADDR
         ST    TIOTREG,BEGTIOT
         LA    TIOTREG,TIOTOFF(TIOTREG)
         L     JSCBREG,TCBJSCB
         USING IEZJSCB,JSCBREG
         L     1,JSCBDBTB          DEB TAB
         DROP  JSCBREG,TCBREG
         L     0,4(,1)             LEGTH OF DEBQ
         AR    0,1                 END OF DEBQ
         ST    0,ENDDEBQ
         LA    1,16(,1)            ADDR OF 1ST DEB IN Q
         ST    1,DEBQADDR
         TM    0(1),X'80'          INVALID ADDR
         BO    NEWDEBQ
         ICM   DEBREG,15,0(1)
         BZ    ENDLDEB
         ST    DEBREG,DEBADDR
         B     LOCDCB
NEWDEBQ  DS    0H
         L     1,DEBQADDR
         LA    1,4(,1)             NEXT DEB IN Q
         C     1,ENDDEBQ           LAST DEB IN Q
         BNL   CHKSPROC
         ST    1,DEBQADDR
         TM    0(1),X'80'          INVALID ADDR
         BO    NEWDEBQ
         ICM   DEBREG,15,0(1)
         BZ    ENDLDEB
         ST    DEBREG,DEBADDR
LOCDCB   DS    0H
         SLR   DCBREG,DCBREG
         ICM   DCBREG,7,DEBDCBAD+1 ADDR DCB
         USING IHADCB,DCBREG
         TM    DCBDSORG,DCBDSGPO   PARTITONED DATA SET?
         BNO   NEWDEBQ             NO..NEXT DEB ENTRY
         TM    DCBOFLG,DCBOFOPN    DATA SET OPEN?
         BO    SETTIOT             YES...
         MVC   WORKDDN,DCBDDNAM    SAVE DD NAME
         B     SETTAB
SETTIOT  DS    0H
         LH    0,DCBTIOT           OFFSET IN TIOT  FOR THIS DCB
         L     1,BEGTIOT           BEG OF TIOT
         AR    1,0                 TIOT ADDR FOR THIS ENTRY
         LR    TIOTREG,1
         USING XIOT,TIOTREG
         MVC   WORKDDN,XIOEDDNM    DDN
SETTAB   DS    0H                  STORE DDN IN LIST
         USING TABSECT,1
         L     1,LASTTAB
         MVC   DDNDSNAM,WORKDDN
         ST    DEBREG,DDNDEB
         ST    TIOTREG,DDNTIOT
         DROP  1
         LA    1,TABL(,1)
         ST    1,LASTTAB
         MVI   0(1),X'FF'
         CLI   TEMPSW,X'00'
         BNE   ENDLDEB
         B     NEWDEBQ
CHKSPROC DS    0H                  CHECK IF DEB FOR SYSPROC FOUND
         LA    1,DDNTAB
         USING TABSECT,1
COMPPROC DS    0H
         CLI   0(1),X'FF'
         BE    GETSPROC
         CLC   DDNDSNAM,=CL8'SYSPROC'
         BE    ENDLDEB
         LA    1,TABL(1)
         B     COMPPROC
         DROP  1
GETSPROC DS    0H                  ASSUME SYSPROC ALLOCATED
         OPEN  (SYSPROC,INPUT)
         TM    SYSPROC+48,X'10'
         BZ    ENDLDEB
         LA    DCBREG,SYSPROC
         L     DEBREG,DCBDEBAD
         MVI   TEMPSW,X'FF'
         MVC   WORKDDN,=CL8'SYSPROC'
         B     SETTIOT
ENDLDEB  DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         BR    RET
LASTTAB  DS    F
SYSPROC  DCB   DDNAME=SYSPROC,DSORG=PO,MACRF=(R)
TEMPSW   DS    X
         LTORG
*        DROP  LINKREG,TIOTREG,DEBREG,DCBREG
         DROP  TIOTREG,DEBREG,DCBREG
         TITLE '                          JOBLIB/SVCLIB/LINKLST SEARCH'
CHKSLIB  DS    0H   CHECK IF MODULE IN JOBLIB OR STEPLIB
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         L     1,16                CVT
         L     1,0(,1)             ADDR OF TCB POINTER
         L     1,4(,1)             ADDR TCB
         ST    1,TCBADDR
         USING TCB,1
         L     DCBREG,TCBJLB
         DROP  1
         MVC   BLDLNUM,=H'1'       1 ENTRY
         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
         MVC   BLDLNAME,WORKPROG
         LA    0,BLDLLIST
         BLDL  (DCBREG),(0)
         LTR   15,15
         BNZ   CHKSVC
         MVC   STEPCCAT,BLDLCCAT
         OI    WORKSW,LOADSTEP
CHKSVC   DS    0H
         L     CVTREG,16
         USING CVT,CVTREG
         L     DCBREG,CVTSVDCB     DCB FOR SYS1.SVCLIB
         DROP  CVTREG
         LA    0,BLDLLIST
         BLDL  (DCBREG),(0)
         LTR   15,15
         BNZ   CHKLINK
         OI    WORKSW,LOADSVC
CHKLINK  DS    0H
         L     CVTREG,16
         USING CVT,CVTREG
***ISSUE BLDL ON LINKLIST
         MVC   SAVELINK,CVTLLTA    LINK LIST
         L     DCBREG,CVTLINK      ADDR LINKLIST DCB
         DROP  CVTREG
         L     1,548               --> ASCB    (PSAAOLD)
         L     1,336(,1)           --> ASSB    (ASCBASSB)
         L     1,236(,1)           --> DLCB    (ASSBDLCB)
         L     DCBREG,12(,1)       --> LINK LIST
         MVC   DLCBNAME,36(1)
         XC    BLDLTTR,BLDLTTR
         MVC   BLDLNUM,=H'1'       1 ENTRY
         MVC   BLDLLEN,=AL2(BLDLELEN)  LEN OF EACH ENTRY
         MVC   BLDLNAME,WORKPROG
         LA    0,BLDLLIST
         BLDL  (DCBREG),(0)
         LTR   15,15
         BNZ   ENDSLIB
         OI    WORKSW,LOADLINK
         MVC   LINKCCAT,BLDLCCAT
ENDSLIB  DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         BR    RET
         LTORG
*        DROP  LINKREG
         TITLE '                                      LINK LIST SEARCH'
SRCHLINK DS    0H   SEARCH LINK LIST FOR DSNAME
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         L     1,548               --> ASCB    (PSAAOLD)
         L     1,336(,1)           --> ASSB    (ASCBASSB)
         L     1,236(,1)           --> DLCB    (ASSBDLCB)
         L     LLTREG,16(,1)       --> LINK LIST
         MVC   DLCBNAME,36(1)
         LA    LLTREG,LLTOFF(,LLTREG) FIRST ENTRY
         USING LLTE,LLTREG
         SR    1,1
         IC    1,BLDLCCAT          CONCATENTATION NUMBER
         LTR   1,1
         BZ    GOTLLT
NEXTLLT  DS    0H
         LA    LLTREG,LLTLEN(LLTREG)  NEXT ENTRY
         BCT   1,NEXTLLT           LOOP CONCAT NUMBER OF TIMES
GOTLLT   DS    0H
         MVC   WORKDSN,LLTDSN
ENDSLINK DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         BR    RET
         LTORG
*        DROP  LINKREG
         TITLE   '                                          LPA SEARCH'
****
SRCHLPA  DS    0H                  SEARCH FOR MODULE IN LPA
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         L     CVTREG,16
         USING CVT,CVTREG
         L     LPDEREG,CVTLPDIA    LPA DIRECTORY
         DROP  CVTREG
         USING LPDE,LPDEREG
TSTLPA   DS    0H
         TM    LPDEATTB,LPDELPDE   LPDE IDENTIFIER
         BNO   ENDSLPA
         CLI   LPDENAME,X'00'
         BE    ENDSLPA
         CLC   WORKPROG,LPDENAME
         BE    GOTLPA
         LA    LPDEREG,LPDELEN(,LPDEREG)
         B     TSTLPA
GOTLPA   DS    0H
         CLC   LPDEMJP,=F'0'       IS THIS A MINOR LPDE?
         BE    *+8
         L     LPDEREG,LPDEMJP     GET MAJOR LPDE ADDRESS
         OI    WORKSW,LOADLPA
         UNPK  WORKCDDR(9),LPDEXTAD(5)
         TR    WORKCDDR,TRTAB
ENDSLPA  DS    0H
         L     13,4(,13)
         LM    14,12,12(13)
         BR    RET
         LTORG
*        DROP  LINKREG,LPDEREG
         DROP  LPDEREG
         TITLE '                                  ALLOCATE CERMFILE DD'
****
ALLOCOUT DS    0H
*        USING *,LINKREG
         STM   14,12,12(13)
         LR    14,13
         LA    13,SAVELINK
         ST    14,4(,13)
         ST    13,8(,14)
         LA    1,RBPOINT           R1 => A(REQ BLOCK )
         DYNALLOC
         L     13,4(,13)
         L     14,12(,13)
         LM    0,12,20(13)
         BR    RET
         DS    0F
RBPOINT  DC    A(*+X'80000004')    ADR  REQ BLOCK PASSED IN R1
RB       DS    0CL20               S99RB DSECT LOC BY RBPOINT
RBLN     DC    AL1(RBEL)           LEN OF RB
RBVERB   DC    AL1(S99VRBAL)       FUNC 01-07 01 FOR ALLOC
RBFLAG1  DC    AL1(S99NOMNT)       FLAG BYTE-DONT CONSIDER OFFLINE UNIT
RBFLAG2  DS    X                   2ND   FLAG BYTE
RBERROR  DS    XL2                 ERROR REASON CODE
RBINFO   DS    XL2                 INFO  REASON CODE
RBTXTPP  DC    A(TXPOINTS)         LIST OF TEXT PTRS
         DS    F                   RESERVED
RBAUTHFL DS    XL4                 FLAGS FOR AUTH FUNCTIONS
RBEL     EQU   *-RB
**TEXT UNIT POINTERS
TXPOINTS DS    0F                  S99TUPL DSECT TU PTR LIST
DDNPOINT DC    A(DDNTEXT)
SYSPOINT DC    A(SYSOTEXT)
TERPOINT DC    A(TERMTEXT+X'80000000')
*
TXUNITS  DS    0F                  S99TUNIT DSECT TEXT UNITS
**DDN TEXT UNIT
DDNTEXT  DS    0F                  DDN TEXT UNIT
DDNTXKEY DC    AL2(DALDDNAM)       KEY FOR DDN TEXT
DDNTXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES
DDNPLEN  DC    AL2(L'DDNTXPRM)     LENGTH OF PARM
DDNTXPRM DC    CL8'CERMFILE'
*
SYSOTEXT DS    0F
SYSOXKEY DC    AL2(DALSYSOU)       KEY FOR SYSOUT ALLOC
SYSOXNUM DC    XL2'0001'           NUM LENGTH + PARM ENTRIES
SYSOLEN  DC    AL2(L'SYSOXPRM)     LENGTH OF PARM
SYSOXPRM DC    C'A'                MUST BE 1
*
TERMTEXT DS    0F   OMITTED
TERMXKEY DC    AL2(DALTERM)        KEY FOR TERM=TS
TERMXNUM DC    XL2'0000'           NUM LENGTH + PARM ENTRIES
TEPROFEN DC    AL2(L'TERTXPRM)     LENGTH OF PARM
TERTXPRM DS    0C                  NO PARM
         DC    CL6' '              FOR PATCHING
         LTORG
*        DROP  LINKREG
         TITLE '                                      TABLES && DSECTS'
TRTAB    EQU   *-240,256
         DC    C'0123456789ABCDEF'
DDNTAB   DS    0F
         DS    100CL16
TABSECT  DSECT
TABENTRY EQU   *
DDNDSNAM DS    CL8
DDNDEB   DS    F
DDNTIOT  DS    F
TABL     EQU   *-TABENTRY
         LTORG
         END                                                            COP00620
